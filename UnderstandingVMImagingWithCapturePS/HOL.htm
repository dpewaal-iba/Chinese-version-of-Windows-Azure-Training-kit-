<!DOCTYPE html>

<html class="no-js" lang="en" class="js flexbox canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths">
<head id="ContentPlaceHolderDefault_Head1">
    <meta http-equiv="X-UA-Compatible" content="IE=9,chrome=1" />
    <meta charset=UTF-8" />
    <title>Windows Azure 培训包 - 了解通过捕获制作虚拟机映像 (PowerShell)</title>
    <link rel="Stylesheet" type="text/css" media="all" href="styles/master.css" />
</head>
<body id="top" class="page-">
    <div id="page">
        <div id="wrapper" class="landingPage getStartedPage">            
            <div class="header">								
				<img alt="Windows Azure" src="images/azure-logo.png" /> <span class="mainHomepageSubTitle">培训包 - 2012 年 12 月更新</span>								
			</div>			
			<div class="nav-menu-header">
				<nav>
					<ul>
						<li class="MenuLink-Selected">
							<a href="#">内容</a>
						</li>
												<li class="MenuLink">
							<a href="Source">设置</a>
						</li>
											</ul>
				
										
						<span id="github-btn" class="github-btn"> <a id="gh-btn" title="在 GitHub 中复制此存储库的分支" href="https://github.com/WindowsAzure-TrainingKit/HOL-UnderstandingVMImagingWithCapturePS/" target="_blank" class="gh-btn"> <span class="gh-ico"></span> <span id="gh-text" class="gh-text">分支</span> </a> </span> <span id="github-btn" class="github-btn github-watchers"> <a id="gh-btn" title="在 GitHub 中关注此存储库" href="https://github.com/WindowsAzure-TrainingKit/HOL-UnderstandingVMImagingWithCapturePS/" target="_blank" class="gh-btn"> <span class="gh-ico"></span> <span id="gh-text" class="gh-text">关注</span> </a> </span>
						
									
				</nav>
			</div>	        
		</span>
			<div id="content" class="textpage">
            <section id="content-container">
				<div id="content" class="textpage">
			    <a name="top"></a>
				
				

		<div class="content">
			<?xml version="1.0" encoding="iso-8859-1"?><span><p><a name="Title"></a></p>

<h1 id="Understanding_Virtual_Machine_Imaging_with_Capture_PowerShell">了解通过捕获制作虚拟机映像 (PowerShell)</h1>

<hr />

<p><a name="Overview"></a></p>

<h2 id="Overview">概述</h2>

<p>在此动手实验中，您将演练如何创建一个自定义虚拟机，该虚拟机经过自定义可通过 PowerShell 远程管理。然后，您将学习如何对该虚拟机进行通用化处理并将其保存为映像，从而使以该虚拟机为基础设置的所有新虚拟机默认都可以进行远程管理。</p>

<h3 id="Objectives">目标</h3>

<p>在此动手实验中，您将学习如何执行以下操作：</p>

<ul>
<li>新建虚拟机</li>
<li>自定义并通用化虚拟机</li>
<li>将映像保存到映像库中</li>
<li>以映像为基础设置新虚拟机</li>
</ul>

<h3 id="Prerequisites">先决条件</h3>

<p>下面是完成此动手实验需要满足的先决条件：</p>

<ul>
<li><a href="http://msdn.microsoft.com/zh-CN/library/windowsazure/jj156055">Windows Azure PowerShell Cmdlet</a></li>
<li>Windows PowerShell 2.0</li>
<li>启用了虚拟机预览的 Windows Azure 订阅 - <a href="http://aka.ms/WATK-FreeTrial">注册以免费试用</a></li>
</ul>
<blockquote>
<p><strong>注意：</strong>此实验针对 Windows 7 操作系统设计。</p>
</blockquote>
<p><a name="Setup"></a></p>

<h3 id="Setup">设置</h3>

<p>为了执行此动手实验中的各项练习，需要对环境进行设置。</p>

<ol>
<li><p>打开一个 Windows 资源管理器窗口，浏览到本实验的 <strong>Source</strong> 文件夹。</p></li>
<li><p>使用管理员权限执行 <strong>Setup.cmd</strong> 文件以启动设置过程，该过程将配置您的环境并安装此实验的 Visual Studio 代码段。</p></li>
<li><p>如果显示“用户帐户控制”对话框，请确认操作以继续。</p></li>
</ol>
<blockquote>
<p><strong>注意：</strong>请务必在运行安装程序前检查此实验的所有依赖项。</p>
</blockquote>
<hr />

<h2 id="Exercises">练习</h2>

<p>此动手实验包括以下练习：</p>

<ol>
<li><a href="#Exercise1">新建虚拟机</a></li>
<li><a href="#Exercise2">自定义并通用化虚拟机</a></li>
<li><a href="#Exercise3">将映像保存到映像库中</a></li>
<li><a href="#Exercise4">以映像为基础设置新虚拟机</a></li>
</ol>

<p>完成此实验的估计时间：<strong>1 小时</strong></p>

<p><a name="gettingstarted"></a></p>

<h3 id="Getting_Started_Obtaining_Subscriptions_Credentials">入门：获取订阅凭据</h3>

<p>为了完成此实验，需要用到您的订阅的安全凭据。在下面的任务中，您将下载发布设置文件，其中包含在开发环境中管理您的帐户所需的全部信息。</p>

<h4 id="Task_1_-_Downloading_and_Importing_a_Publish-settings_File">任务 1 - 下载和导入发布设置文件</h4>

<p>在此任务中，您将登录到 Windows Azure 门户并下载发布设置文件。此文件包含安全凭据以及有关在开发环境中使用的 Windows Azure 订阅的其他信息。然后，您将使用 Windows Azure Cmdlet 导入此文件，以便安装证书并获取帐户信息。</p>

<ol>
<li><p>打开 Internet Explorer 浏览器，转到 <a href="https://windows.azure.com/download/publishprofile.aspx">https://windows.azure.com/download/publishprofile.aspx</a>，使用您的 Microsoft 帐户凭据登录。</p></li>
<li><p>将发布设置文件<strong>保存</strong>到本地计算机。</p>

<p><img src="images/downloading-publish-settings-file.png?raw=true" alt="下载发布设置文件" title="下载发布设置文件" />
</p>

<p><em>下载发布设置文件</em></p>
<blockquote>
<p><strong>注意：</strong>下载页面说明如何使用 Visual Studio 发布框导入发布设置文件。此实验将说明如何改用 Windows Azure PowerShell Cmdlet 执行导入。</p>
</blockquote></li>
<li><p>在 <strong>Windows Azure</strong> 下的开始菜单中，右键单击 <strong>Windows Azure PowerShell</strong>，然后选择<strong>“以管理员身份运行”</strong>。</p></li>
<li><p>将 PowerShell 执行策略更改为 <strong>RemoteSigned</strong>。在要求确认时，按 <strong>Y</strong>，然后按 <strong>Enter</strong>。</p>

<!-- mark:1 -->

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell"><strong class="markLine">Set-ExecutionPolicy RemoteSigned</strong>
</code></pre>
<blockquote>
<p><strong>注意：</strong>通过 Set-ExecutionPolicy cmdlet 可以确定允许在计算机上运行的 Windows PowerShell 脚本（如果有）。Windows PowerShell 有四种不同的执行策略：</p>

<ul>
<li><em>Restricted</em> - 任何脚本都不能运行。Windows PowerShell 只能在交互模式中使用。</li>
<li><em>AllSigned</em> - 只有由受信任的发布者签名的脚本可以运行。</li>
<li><em>RemoteSigned</em> - 下载的脚本必须由受信任的发布者签名，才可以运行。</li>
<li><em>Unrestricted</em> - 没有限制，所有 Windows PowerShell 脚本都可以运行。</li>
</ul>

<p>有关执行策略的详细信息，请参阅 TechNet 文章：<a href="http://technet.microsoft.com/zh-CN/library/ee176961.aspx">http://technet.microsoft.com/zh-CN/library/ee176961.aspx</a></p>
</blockquote></li>
<li><p>下面的脚本导入发布设置文件并使用您的帐户信息生成一个 XML 文件。您将在实验过程中使用这些值来管理您的 Windows Azure 订阅。将占位符替换为发布设置文件的路径并执行脚本。</p>

<!-- mark:1 -->

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell"><strong class="markLine">Import-AzurePublishSettingsFile '[YOUR-PUBLISH-SETTINGS-PATH]'</strong>
</code></pre></li>
<li><p>配置您的设置以使用存储帐户。</p></li>
<li><p>执行以下命令，以确定您的订阅和存储帐户名称，并设置当前存储帐户。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Get-AzureSubscription | select SubscriptionName Get-AzureStorageAccount | select StorageAccountName Set-AzureSubscription -SubscriptionName '[YOUR-SUBSCRIPTION-NAME]' -CurrentStorageAccount '[YOUR-STORAGE-ACCOUNT]'
</code></pre></li>
</ol>

<p><a name="Exercise1"></a></p>

<h3 id="Exercise_1_Creating_a_New_Virtual_Machine">练习 1：新建虚拟机</h3>

<p>在本练习中，您将演练设置新虚拟机的各个步骤。</p>

<p><a name="Ex1Task1"></a></p>

<h4 id="Task_1_Creating_a_New_Virtual_Machine">任务 1：新建虚拟机</h4>

<p>在此任务中，您将设置一台供自定义的虚拟机。</p>

<ol>
<li><p>打开 Internet Explorer 并浏览 <a href="https://manage.windowsazure.com/"><a href="https://manage.windowsazure.com/">https://manage.windowsazure.com/</a></a> 以进入 Windows Azure 门户。然后，使用您的凭据登录。</p></li>
<li><p>在位于底部的菜单中，选择<strong>“新建”|“虚拟机”|“从库中”</strong>开始新建虚拟机。</p>

<p><img src="images/creating-a-new-virtual-machine.png?raw=true" alt="新建虚拟机" />
</p>

<p><em>新建虚拟机</em></p>

<ol>
<li>在<strong>“选择虚拟机操作系统”</strong>页中，单击左侧菜单中的<strong>“平台映像”</strong>，然后从列表中选择<strong>“Windows Server 2008 R2”</strong>操作系统映像。单击箭头继续。<br/></li>
<li><p>在<strong>“虚拟机配置”</strong>页上，输入<strong>虚拟机名称</strong>（例如 &quot;imgtest1&quot;）、管理员用户的<strong>密码</strong>和<strong>大小</strong>。单击<strong>向右箭头</strong>继续。</p>

<p><img src="images/creating-a-vm-configuration.png?raw=true" alt="配置自定义虚拟机" />
</p>

<p><em>创建虚拟机 - 配置</em></p>
<blockquote>
<p><strong>注意：</strong>建议对管理用户使用安全密码，因为只要知道 Windows Azure 虚拟机的 DNS 就可以从 Internet 访问它们。</p>

<p>您也可以阅读 Microsoft 安全网站上的以下文档帮助选择安全密码：<a href="http://www.microsoft.com/security/online-privacy/passwords-create.aspx"><a href="http://www.microsoft.com/security/online-privacy/passwords-create.aspx">http://www.microsoft.com/security/online-privacy/passwords-create.aspx</a></a></p>
</blockquote></li>
<li><p>在<strong>“虚拟机模式”</strong>页中，选择<strong>“独立虚拟机”</strong>，输入 <strong>DNS 名称</strong>，选择一个<strong>存储帐户</strong>或保留默认值“使用自动生成的存储帐户”<em></em>，然后选择一个<strong>区域/关联组/虚拟网络</strong>。单击<strong>向右箭头</strong>继续。</p>

<p><img src="images/creating-a-vm-vm-mode.png?raw=true" alt="配置自定义虚拟机，虚拟机模式" />
</p>

<p><em>创建虚拟机 - 虚拟机模式</em></p></li>
<li><p>在<strong>“虚拟机选项”</strong>页中，保留默认值并单击按钮新建虚拟机。</p>

<p><img src="images/creating-a-vm--vm-options.png?raw=true" alt="创建虚拟机 - 虚拟机选项" title="创建虚拟机 - 虚拟机选项" />
</p>

<p><em>创建虚拟机 - 虚拟机选项</em></p></li>
</ol></li>
</ol>

<p><a name="Exercise2"></a></p>

<h3 id="Exercise_2_Customize_and_Generalize_the_Virtual_Machine">练习 2：自定义并通用化虚拟机</h3>

<p>在此练习中，我们将启用 Windows 远程管理，配置 SSL 并允许远程 PowerShell。</p>

<p><a name="Ex2Task1"></a></p>

<h4 id="Task_1_-_Configure_the_HTTPS_Endpoint_for_WinRMPowerShell">任务 1 - 为 WinRM/PowerShell 配置 HTTPS 端点</h4>

<p>在此方案中，您将配置虚拟机启动时运行的脚本。此脚本将创建自签名证书并配置 Windows 远程管理使用 SSL 侦听端口 5986。</p>

<ol>
<li><p>虚拟机配置完成后，将其突出显示，然后单击<strong>“连接”</strong>。</p>

<p><img src="images/connect.png?raw=true" alt="连接" />
</p>

<p><em>连接到虚拟机</em></p></li>
<li><p>系统会要求您下载远程桌面客户端。单击<strong>“打开”</strong>并使用您在创建虚拟机时定义的管理员凭据登录。</p></li>
<li><p>在 Azure 虚拟机中，从<strong>“开始”|“所有程序”|“附件”|“Windows PowerShell”</strong>打开 <strong>Windows PowerShell</strong> 控制台，右键单击 Windows PowerShell 并选择<strong>“以管理员身份运行”</strong>。</p></li>
<li><p>在 PowerShell 控制台中键入：<strong>Set-ExecutionPolicy remotesigned</strong>，提示时选择“是”。</p></li>
<li><p>使用 Windows 资源管理器在 <em>C:</em> 驱动器上创建一个名为 <em>EnablePSRemote</em> 的文件夹。</p></li>
<li><p>在 Windows 资源管理器中，按 <em>Alt</em> 键打开“工具”菜单，然后单击<strong>“工具”|“文件夹选项”</strong>。切换到<strong>“查看”</strong>选项卡，取消选择<strong>“隐藏已知文件类型的扩展名”</strong>。单击<strong>“确定”</strong>保存更改。</p></li>
<li><p>在 <strong>EnablePSRemote</strong> 文件夹中创建一个 PS1 文件。右键单击 <em>C:\EnablePSRemote</em> 文件夹中的任意位置，然后选择<strong>“新建”|“文本文档”</strong>。将其命名为 <strong>EnablePSRemote.ps1</strong>。</p></li>
<li><p>在记事本中打开 EnablePSRemote.ps1，将以下脚本粘贴到其中。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">function Create-Certificate($hostname) { $name = new-object -com &quot;X509Enrollment.CX500DistinguishedName.1&quot; $name.Encode(&quot;CN=$hostname&quot;, 0) $key = new-object -com &quot;X509Enrollment.CX509PrivateKey.1&quot; $key.ProviderName = &quot;Microsoft RSA SChannel Cryptographic Provider&quot; $key.KeySpec = 1 $key.Length = 1024 $key.SecurityDescriptor = &quot;D:PAI(A;;0xd01f01ff;;;SY)(A;;0xd01f01ff;;;BA)(A;;0x80120089;;;NS)&quot; $key.MachineContext = 1 $key.Create() $serverauthoid = new-object -com &quot;X509Enrollment.CObjectId.1&quot; $serverauthoid.InitializeFromValue(&quot;1.3.6.1.5.5.7.3.1&quot;) $ekuoids = new-object -com &quot;X509Enrollment.CObjectIds.1&quot; $ekuoids.add($serverauthoid) $ekuext = new-object -com &quot;X509Enrollment.CX509ExtensionEnhancedKeyUsage.1&quot; $ekuext.InitializeEncode($ekuoids) $cert = new-object -com &quot;X509Enrollment.CX509CertificateRequestCertificate.1&quot; $cert.InitializeFromPrivateKey(2, $key, &quot;&quot;) $cert.Subject = $name $cert.Issuer = $cert.Subject $cert.NotBefore = get-date $cert.NotAfter = $cert.NotBefore.AddDays(180) $cert.X509Extensions.Add($ekuext) $cert.Encode() $enrollment = new-object -com &quot;X509Enrollment.CX509Enrollment.1&quot; $enrollment.InitializeFromRequest($cert) $certdata = $enrollment.CreateRequest(0) $enrollment.InstallResponse(2, $certdata, 0, &quot;&quot;) } $hostname = $env:COMPUTERNAME $output = &amp; winrm g winrm/config/Listener?Address=*+Transport=HTTPS | Out-String if($lastexitcode -eq 0) { # HTTPS Listener Already Configured Return return } # HTTPS Listener Not Configured - Configure Now # Enable PS remoting Enable-PSRemoting -Force # Create the self signed certificate (Only for testing) Create-Certificate $hostname # Get the certificate thumbprint $certTp = get-childitem -path cert:\LocalMachine\My* -Recurse | Where { ($_.Issuer -eq &quot;CN=&quot; + $hostname) -and ($_.Subject -eq &quot;CN=&quot; + $hostname) } | Select Thumbprint $certTp = $certTP.Thumbprint # Open up 5986 for WinRM HTTPS &amp; netsh advfirewall firewall delete rule name=&quot;WinRM HTTPS&quot; dir=in protocol=TCP localport=5986 &amp; netsh advfirewall firewall add rule name=&quot;WinRM HTTPS&quot; dir=in action=allow protocol=TCP localport=5986 # Specify the newly created cert thumbprint $certString = &quot;@{Hostname=&quot;&quot;&quot; + $hostname + &quot;&quot;&quot;;CertificateThumbprint=&quot;&quot;&quot; + $certTp + &quot;&quot;&quot;}&quot; # Create the HTTPS listener &amp; WinRM create winrm/config/Listener?Address=*+Transport=HTTPS $certString # Enable Basic Authentication WinRM set winrm/config/service/auth '@{Basic=&quot;true&quot;}'
</code></pre></li>
</ol>

<p><a name="Ex2Task2"></a></p>

<h4 id="Task_2_-_Create_a_batch_file_to_use_the_task_scheduler_to_launch_the_script_on_boot">任务 2 - 创建一个批处理文件，以在启动时使用任务计划程序启动脚本。</h4>

<ol>
<li><p>在同一文件夹中，新建一个名为 <em>taskscheduler.cmd</em> 的文本文件。</p></li>
<li><p>在记事本中打开该文件，并插入以下命令。确保在两个位置都将 [YOUR-PASSWORD] 占位符替换为您的实际密码。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">net user scheduser [YOUR-PASSWORD] /add net localgroup Administrators scheduser /add schtasks /CREATE /TN &quot;EnablePS-Remote&quot; /SC ONCE /SD 01/01/2020 /ST 00:00:00 /RL HIGHEST /RU scheduser /RP [YOUR-PASSWORD] /TR &quot;powershell -file C:\EnablePSRemote\EnablePSRemote.ps1&quot; /F schtasks /RUN /TN &quot;EnablePS-Remote&quot;
</code></pre></li>
</ol>

<p><a name="Ex2Task3"></a></p>

<h4 id="Task_3_-_Configure_a_Startup_Task_for_the_cmd_file">任务 3 - 为 cmd 文件配置启动任务</h4>

<ol>
<li><p>在远程 Azure 虚拟机中，转到<strong>“开始”|“运行...”</strong>，键入 <em>mmc.exe</em> 并单击<strong>“确定”</strong>。</p></li>
<li><p>在 MMC 菜单中，选择<strong>“文件”|“添加/删除管理单元”</strong>，然后选择<strong>“组策略对象编辑器”</strong>并单击<strong>“添加”</strong>。接受默认值，单击<strong>“完成”</strong>，然后单击<strong>“确定”</strong>。</p></li>
<li><p>展开<strong>“本地计算机策略”|“计算机配置”|“Windows 设置”|“脚本(启动/关机)”</strong>。</p></li>
<li><p>双击<strong>“启动”</strong>，然后单击<strong>“添加”</strong>。</p></li>
<li><p>在<strong>“脚本名”</strong>中键入 <em>C:\EnablePSRemote\taskscheduler.cmd</em>，然后单击<strong>“确定”</strong>两次保存更改。</p>

<p><img src="images/configuretaskscheduler.png?raw=true" alt="配置任务计划程序" />
</p>

<p><em>配置任务计划程序</em></p></li>
</ol>

<p><a name="Ex2Task4"></a></p>

<h4 id="Task_4_-_Generalize_the_Machine_with_SysPrep">任务 4 - 使用 SysPrep 通用化虚拟机</h4>

<p>在此步骤中，我们将运行 sysprep 对映像做通用化处理，以使在此映像基础上创建的多个虚拟机都拥有相同的自定义设置（启用远程 PowerShell）。</p>

<ol>
<li><p>在远程 Azure 虚拟机中，转到<strong>“开始”|“运行...”</strong>，键入 <em>sysprep</em> 并单击<strong>“确定”</strong>。</p></li>
<li><p>在随后出现的 Windows 资源管理器文件夹中，双击 <strong>sysprep.exe</strong>。</p></li>
<li><p>在<strong>“系统准备工具”</strong>对话框中，保留<strong>“系统清理操作”</strong>的默认值，选中<strong>“通用”</strong>并将“关机选项”值更改为<em>“关机”</em>。单击<strong>“确定”</strong>开始此过程。</p>

<p><img src="images/sysprep.png?raw=true" alt="sysprep" title="sysprep" />
</p>

<p><em>Sysprep</em></p></li>
</ol>

<p><a name="Exercise3"></a></p>

<h3 id="Exercise_3_Saving_an_Image_in_the_Image_Library">练习 3：将映像保存到映像库中</h3>

<p>在此练习中，您将使用虚拟机的捕获功能根据（之前创建的）现有虚拟机创建新映像。下面的示例使用 Windows Azure PowerShell cmdlet，但在 Windows Azure 管理门户也可以实现。</p>
<blockquote>
<p><strong>注意：</strong>在继续操作前，请确保 imgtest1 虚拟机关闭（其状态应为“已停止”）。</p>
</blockquote>
<p><a name="Ex3Task1"></a></p>

<h4 id="Task_1_-_Saving_an_Image_in_the_Image_Library">任务 1 - 将映像保存到映像库中</h4>

<ol>
<li><p>在 PowerShell 控制台中插入以下命令：</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Get-AzureService | Select ServiceName
</code></pre></li>
<li><p>以下命令将返回虚拟机的当前状态。在状态设置为 StoppedVM 前不要执行后面的操作。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Get-AzureVM -ServiceName '[YOUR-SERVICE-NAME]' -Name '[YOUR-VM-NAME]' | Select InstanceStatus 
</code></pre></li>
<li><p>使用 Save-AzureVMImage cmdlet 可以获取经过 sysprep 处理的虚拟机并将其捕获为新的可重用映像。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Save-AzureVMImage -ServiceName '[YOUR-SERVICE-NAME]' -Name '[YOUR-VM-NAME]' -NewImageLabel 'remotepsimg' -NewImageName 'remotepsimg'
</code></pre></li>
</ol>

<p><a name="Exercise4"></a></p>

<h3 id="Exercise_4_Provision_New_VMs_based_off_of_an_Image">练习 4：以映像为基础设置新虚拟机</h3>

<p>在此练习中，您将使用前面练习中创建的映像创建一台新虚拟机。</p>

<p><a name="Ex4Task1"></a></p>

<h4 id="Task_1_-_Creating_a_Virtual_Machine_Based_off_of_an_Image">任务 1 - 以映像为基础创建虚拟机</h4>

<ol>
<li><p>以下命令将返回库中所有操作系统的当前列表。如果返回值中没有显示 <em>remotepsimg</em>，请不要执行后面的步骤。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Get-AzureVMImage | Select ImageName
</code></pre></li>
<li><p>执行以下命令检索可用数据中心位置。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Get-AzureLocation | select name
</code></pre></li>
<li><p>使用要部署到的数据中心的名称定义 $dclocation 变量。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">$dclocation = '[YOUR-LOCATION]'
</code></pre></li>
<li><p>键入以下命令，以之前创建的映像为基础新建一台虚拟机，并为远程 PowerShell 配置一个端点来侦听端口 5986。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">$cloudSvcName = '[UNIQUE-SERVICE-NAME]' $vmname = 'remoteps1' $password = '[YOUR-PASSWORD]' $imgname = 'remotepsimg' $vm = New-AzureVMConfig -Name $vmname -InstanceSize Small -ImageName $imgname | Add-AzureProvisioningConfig -Windows -Password $password | Add-AzureEndpoint -LocalPort 5986 -PublicPort 5986 -Protocol tcp -Name 'remoteps' | New-AzureVM -ServiceName $cloudSvcName -Location $dclocation
</code></pre></li>
</ol>

<p><a name="Ex4Task2"></a></p>

<h4 id="Task_2_-_Connect_from_a_Remote_Client_using_PowerShell">任务 2 - 使用 PowerShell 从远程客户端连接</h4>

<ol>
<li><p>运行以下命令以返回您的虚拟机的状态。等待 InstanceStatus 成为 ReadyRole，然后再执行下一步骤。</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Get-AzureVM -ServiceName $cloudSvcName -Name $vmname
</code></pre></li>
<li><p>要远程连接，您需要使用 Windows Azure 门户确定虚拟机的公共主机和 DNS 名称，方法是浏览到您的虚拟机并单击虚拟机名称。</p></li>
<li><p>键入以下命令进行连接和测试（将 hostname 替换为虚拟机的真实主机名）：</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">Enter-PSSession -ComputerName {hostname}.cloudapp.net -Authentication Basic -Credential Administrator -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)
</code></pre>
<blockquote>
<p><strong>注意：</strong>要为加入域的计算机配置相同的方案，您需要使用 <strong>-Authentication Negotiate</strong> 而不是 <strong>Basic</strong>。</p>
</blockquote></li>
<li><p>现在提示符的左侧应该显示了主机名。</p></li>
<li><p>运行以下命令以查看远程文件系统：</p>

<span class="codelanguage">CMD</span><pre><code class="CMD">cd\ dir
</code></pre>

<p><img src="images/remote-prompt.png?raw=true" alt="远程提示" />
</p>

<p><em>远程提示</em></p></li>
</ol>

<hr />

<p><a name="Summary"></a></p>

<h2 id="Summary">小结</h2>

<p>通过完成此动手实验，您学习了如何：</p>

<ul>
<li>配置 PowerShell 通过 HTTPS 进行远程连接</li>
<li>自定义虚拟机并将其捕获到映像库</li>
<li>在 Windows Azure IaaS 中对虚拟机运行远程命令</li>
</ul>

<hr /> </span>
		</div>
	<br/>
	<p><a href="#top">返回页首</a></p>


				</div>
			</section>
			<footer>
				<div class="footer-sitemap" style="border-top:0"></div>
				<div class="footer-bottom">
					<ul>
						<li class="footer-copyright"><a href="http://www.microsoft.com"><img alt="microsoft" src="images/microsoft.png" /></a></li>					
												<li><a href="https://github.com/WindowsAzure-TrainingKit/HOL-UnderstandingVMImagingWithCapturePS//issues" target="_new">记录问题</a></li>
												<li><a href="mailto:azcfeed@microsoft.com?subject=Windows Azure Training Kit">联系我们</a></li>
						<li><a href="EULA.htm">使用条款</a></li>
						<li><a href=".\">浏览内容</a></li>
						<li>&copy; 2012 Microsoft</li>
					</ul>
				</div>
			</footer>
			</div>
        </div>
    </div>
</body>
</html>

