<!DOCTYPE html>

<html class="no-js" lang="en" class="js flexbox canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths">
<head id="ContentPlaceHolderDefault_Head1">
    <meta http-equiv="X-UA-Compatible" content="IE=9,chrome=1" />
    <meta charset=UTF-8" />
    <title>Windows Azure 培训包 - Windows Azure SQL Database 简介 - 适用于 Visual Studio 2012</title>
    <link rel="Stylesheet" type="text/css" media="all" href="styles/master.css" />
</head>
<body id="top" class="page-">
    <div id="page">
        <div id="wrapper" class="landingPage getStartedPage">            
            <div class="header">								
				<img alt="Windows Azure" src="images/azure-logo.png" /> <span class="mainHomepageSubTitle">培训包 - 2012 年 12 月更新</span>								
			</div>			
			<div class="nav-menu-header">
				<nav>
					<ul>
						<li class="MenuLink-Selected">
							<a href="#">内容</a>
						</li>
												<li class="MenuLink">
							<a href="Source">设置</a>
						</li>
											</ul>
				
										
						<span id="github-btn" class="github-btn"> <a id="gh-btn" title="在 GitHub 中复制此存储库的分支" href="https://github.com/WindowsAzure-TrainingKit/HOL-IntroSQLDatabase-VS2012" target="_blank" class="gh-btn"> <span class="gh-ico"></span> <span id="gh-text" class="gh-text">分支</span> </a> </span> <span id="github-btn" class="github-btn github-watchers"> <a id="gh-btn" title="在 GitHub 中关注此存储库" href="https://github.com/WindowsAzure-TrainingKit/HOL-IntroSQLDatabase-VS2012" target="_blank" class="gh-btn"> <span class="gh-ico"></span> <span id="gh-text" class="gh-text">关注</span> </a> </span>
						
									
				</nav>
			</div>	        
		</span>
			<div id="content" class="textpage">
            <section id="content-container">
				<div id="content" class="textpage">
			    <a name="top"></a>
				
				

		<div class="content">
			<?xml version="1.0" encoding="iso-8859-1"?><span><p><a name="HOLTop"></a></p>

<h1 id="Introduction_to_Windows_Azure_SQL_Database_-_for_Visual_Studio_2012">Windows Azure SQL Database 简介 - 适用于 Visual Studio 2012</h1>

<hr />

<p><a name="Overview"></a></p>

<h2 id="Overview">概述</h2>

<p>SQL Database 是 Microsoft SQL Server 功能在云托管服务上的延伸。使用 SQL Database 对大多数开发人员来说应该并不陌生，因为在很大程度上它支持当前用于内部 SQL Server 应用程序的相同工具和开发方法。</p>

<p>本动手实验将演示一系列 SQL Database 的简单使用案例，如配置您的帐户、创建和使用数据库。您将创建一个简单 Windows Azure 应用程序来对在 SQL Database 中运行的数据库的 Contact 表数据进行操作。</p>

<p><a name="Objectives"></a></p>

<h3 id="Objectives">目标</h3>

<p>在此动手实验中，您将学习如何执行以下操作：</p>

<ul>
<li>  将 SQL Database 作为应用程序的云托管数据库平台。</li>
<li>  配置新的 SQL Database 服务器并创建新数据库。</li>
<li>  创建新的 SQL Database 用户并授予适当的权限。</li>
<li>  使用 SQL Database 执行语句以创建表和索引以及插入和查询行。</li>
<li>  使用 Visual Studio 中的图形控件生成简单的数据驱动 ASP.NET 页。</li>
<li>  通过客户端库连接到 SQL Database。</li>
</ul>

<p><a name="Prerequisites"></a></p>

<h3 id="Prerequisites">先决条件</h3>

<p>下面是完成此动手实验需要满足的先决条件：</p>

<ul>
<li><a href="http://www.microsoft.com/visualstudio/">Visual Studio Express 2012 for Web</a> 或更高版本</li>
<li><a href="http://www.microsoft.com/visualstudio/">Visual Studio Express 2012 for Desktop</a> 或更高版本</li>
<li><a href="http://www.microsoft.com/windowsazure/sdk/">Windows Azure Tools for Microsoft Visual Studio 1.8</a></li>
<li><a href="http://www.microsoft.com/zh-CN/download/details.aspx?id=29062">SQL Server Management Studio 2012 Express Edition</a> 或更高版本</li>
<li>可以访问 <strong>SQL Database</strong> 帐户并创建一个服务器</li>
<li>为运行此实验的计算机启用 <strong>SQL Database 防火墙</strong></li>
<li>Windows Azure 订阅 - <a href="http://aka.ms/WATK-FreeTrial">注册以免费试用</a></li>
</ul>
<blockquote>
<p><strong>注意：</strong>本实验设计为使用 Windows 8 操作系统。</p>
</blockquote>
<p><a name="Setup"></a></p>

<h3 id="Setup">设置</h3>

<p>为了执行此动手实验中的各项练习，需要对环境进行设置。</p>

<ol>
<li><p>打开 Windows 资源管理器窗口，浏览到此实验的 <strong>Source</strong> 文件夹。</p></li>
<li><p>使用管理员权限执行 <strong>Setup.cmd</strong> 文件以启动设置过程，该过程将配置您的环境并安装此实验的 Visual Studio 代码段。</p></li>
<li><p>如果显示“用户帐户控制”对话框，请确认操作以继续。</p></li>
</ol>
<blockquote>
<p><strong>注意：</strong>请务必在运行安装程序前检查此实验的所有依赖项。</p>
</blockquote>
<p><a name="CodeSnippets"></a></p>

<h3 id="Using_the_Code_Snippets">使用代码段</h3>

<p>实验文档将指导您插入代码块。为方便起见，大部分代码是以 Visual Studio 代码段的形式提供的，您可以在 Visual Studio 2012 中使用而不必手动添加。</p>
<blockquote>
<p><strong>注意：</strong>每个练习都附带一个起始解决方案，它位于练习的 Begin 文件夹中，允许您独立执行每个练习。请注意，在练习期间添加的代码段不包含在这些起始解决方案中，在您完成练习前，这些代码段不一定起作用。在练习的源代码内，您还会看到一个 End 文件夹，其中包含在完成相应练习中的步骤之后所生成的 Visual Studio 解决方案代码。如果在进行此动手实验时需要更多帮助，可以使用这些解决方案作为指南。</p>
</blockquote>
<hr />

<p><a name="Exercises"></a></p>

<h2 id="Exercises">练习</h2>

<p>此动手实验包括以下练习：</p>

<ol>
<li><a href="#Exercise1">准备 SQL Database 帐户</a></li>
<li><a href="#Exercise2">基本 DDL 和 DML - 创建表和索引</a></li>
<li><a href="#Exercise3">生成访问 SQL Database 的 Windows Azure 应用程序</a></li>
<li><a href="#Exercise4">通过客户端库连接</a></li>
</ol>

<p>完成此实验的估计时间：<strong>60 分钟</strong>。</p>
<blockquote>
<p><strong>注意：</strong>您首次启动 Visual Studio 时，必须选择一个预定义的设置集合。每个预定义的集合在设计上都对应于特定的开发风格，能够确定窗口布局、编辑器行为、IntelliSense 代码段和对话框选项。此实验中的过程介绍了在使用<strong>“常规开发设置”</strong>集合时，在 Visual Studio 中完成指定任务所需的操作。如果您为开发环境选择其他设置集合，需要考虑可能的过程差异。</p>
</blockquote>
<p><a name="Exercise1"></a></p>

<h3 id="Exercise_1_Preparing_Your_SQL_Database_Account">练习 1：准备 SQL Database 帐户</h3>

<p>在此练习中，您将连接到 SQL Database 帐户并创建一个数据库服务器，添加新用户，然后重新连接到 SQL Database 以便可以开始使用新数据库。</p>

<p><a name="Ex1Task1"></a></p>

<h4 id="Task_1_-_Retrieving_your_SQL_Database_Server_Name">任务 1 - 检索 SQL Database 服务器名称</h4>

<p>在此任务中，您将登录到 SQL Database 门户以获取分配给您的帐户的 SQL Database 服务器名称。</p>

<ol>
<li><p>打开 <strong>Internet Explorer</strong> 并导航到 Windows Azure 门户 <a href="https://manage.windowsazure.com"><a href="https://manage.windowsazure.com">https://manage.windowsazure.com</a></a>。</p></li>
<li><p>登录到您的 Microsoft 帐户。</p>

<p><img src="Images/loggingintotheazureservicesportal.png?raw=true" alt="登录到 Azure 服务门户" />
</p>

<p><em>登录到 Azure 服务门户</em></p></li>
<li><p>在 Windows Azure 门户主页，单击左窗格中的 <strong>SQL Database</strong>，然后选择<strong>“服务器”</strong>列出您的 SQL Server。</p>

<p><img src="Images/viewing-sql-servers.png?raw=true" alt="查看 SQL Server" />
</p>

<p><em>查看 SQL Server</em></p></li>
<li><p>如果您以前未创建服务器，则现在需要创建；否则可以跳过此练习。</p></li>
<li><p>要创建新服务器，请单击底部菜单中的<strong>“添加”</strong>。</p>

<p><img src="Images/add-a-new-sql-server.png?raw=true" alt="添加新的 SQL Server" title="添加新的 SQL Server" />
</p>

<p><em>添加新的 SQL Server</em></p></li>
<li><p>插入数据库管理员的<strong>管理员名称</strong>（例如 SQLAdmin）和<strong>密码</strong>。选择将创建服务器数据库的<strong>区域</strong>。确保选中<strong>“允许 Windows Azure 服务访问服务器”</strong>，然后单击<strong>勾号</strong>以创建新服务器。您稍后将在此练习中配置防火墙规则。</p>

<p><img src="Images/server-settings.png?raw=true" alt="服务器设置" />
</p>

<p><em>服务器设置</em></p>
<blockquote>
<p><strong>注意：</strong>管理员帐户是用于管理新服务器的主帐户。您应避免在连接字符串中使用此帐户，因为这可能泄露用户名和密码。密码策略要求该密码遵守某些规则。</p>

<p><img src="Images/passwordpolicy.png?raw=true" alt="密码策略" />
</p>
</blockquote></li>
<li><p>最后将显示新服务器信息，包括<strong>完全限定的服务器名称</strong>。</p>

<p><img src="Images/sqldatabaseserverlist.png?raw=true" alt="SQL Database 服务器列表" />
</p>

<p><em>SQL Database 服务器列表</em></p>
<blockquote>
<p><strong>注意：</strong>服务器的完全限定域名采用以下格式：<em>&lt;ServerName&gt;.database.windows.net</em>，其中 <em>&lt;ServerName&gt;</em> 标识服务器，例如 <em>udi4slmm7g.database.windows.net</em>。</p>
</blockquote></li>
<li><p>从创建的 SQL Server 列表中单击您的服务器名称，然后选择顶部菜单中的<strong>“面板”</strong>。查看您的 SQL Server 中显示的信息。</p>

<p><img src="Images/sql-server-information-page.png?raw=true" alt="SQL Server 信息页" title="SQL Server 信息页" />
</p>

<p><em>SQL Server 信息页</em></p></li>
<li><p>单击顶部菜单中的<strong>“配置”</strong>以设置服务器的防火墙规则。</p>

<p><img src="Images/sql-database-server-allowed-ip-addresses.png?raw=true" alt="SQL Server 允许的 IP 地址" />
</p>

<p><em>SQL Database 服务器信息页</em></p>
<blockquote>
<p><strong>注意：</strong><strong>“允许的 IP 地址”</strong>允许您指定可以访问 SQL Database 服务器的 IP 地址列表。默认情况下，防火墙将拒绝所有连接，因此<strong>请务必配置允许列表</strong>以便现有客户端可以连接到该服务器。</p>
</blockquote></li>
<li><p>单击<strong>“添加到允许的 IP 地址”</strong>以允许您自己访问该服务器。在<strong>“Windows Azure 服务”</strong>中，确保选择<em>“是”</em> 以允许 Azure 访问您的 SQL Server，然后单击<strong>“保存”</strong>。</p>

<p><img src="Images/adding-new-allowed-ip.png?raw=true" alt="添加新的允许 IP" />
</p>

<p><em>添加新的允许 IP</em></p>
<blockquote>
<p><strong>注意：</strong>对防火墙设置的更改可能需要一段时间才能生效。</p>
</blockquote>
<p>您现在创建了一个数据库服务器，可以执行此实验接下来的步骤了。此数据库可以从任意位置连接。</p></li>
</ol>

<p><a name="Exercise2"></a></p>

<h3 id="Exercise_2_Working_with_Data_Basic_DDL_and_DML">练习 2：使用数据基本 DDL 和 DML</h3>

<p>在此练习中，您将创建一个新数据库并使用其数据。这意味着您将创建一些表，相应编制这些表的索引，然后插入和查询数据。为此，您将使用两个不同的工具。第一个工具是 SQL Database 的数据库管理器，它是基于浏览器的 Silverlight 数据库管理工具，您可以从 Windows Azure 门户访问它。另一个工具是 SQL Server Management Studio，它一般与 SQL Server 管理关联。您将看到这个工具对于管理 SQL Database 同样有用。</p>

<p><a name="Ex2Task1"></a></p>

<h4 id="Task_1_-_Creating_a_New_Database">任务 1 - 创建新数据库</h4>

<ol>
<li><p>在 Windows Azure 管理门户用户界面中，选择底部窗格中的<strong>“新建”</strong>，接着选择<strong>“数据服务”</strong>|<strong>“SQL Database”</strong>|<strong>“自定义创建”</strong>。</p>

<p><img src="Images/new-sql-database.png?raw=true" alt="新建 SQL Database" />
</p>

<p><em>创建新数据库</em></p></li>
<li><p>在<strong>“指定数据库设置”</strong>对话框中，将<strong>“名称”</strong>设置为 <em>HoLTestDB</em>，选择 <em>Web</em> <strong>版本</strong>，接受建议的<strong>“限制数据库大小”</strong>和<strong>“排序规则”</strong>值，然后选择您在以前练习中创建的<strong>服务器</strong>。</p>

<p><img src="Images/new-database-settings.png?raw=true" alt="选择数据库功能" />
</p>

<p><em>新数据库的功能</em></p>
<blockquote>
<p><strong>注意：</strong>在此动手实验中，您使用 Windows Azure 门户创建一个数据库。还可以针对分配的服务器执行 DDL 查询来创建数据库，使用 T-SQL CREATE DATABASE 语句指定要创建的 SQL Database 版本（Web 或 Business）以及它的最大大小。例如，要创建最大大小为 30GB 的 Business 版数据库，请使用以下 T-SQL 命令：</p>

<p><strong>CREATE DATABASE HolTestDB (MAXSIZE = 30GB)</strong></p>

<p>数据库达到最大大小后，您不能再插入数据，直到删除一些数据以释放存储空间或增加最大大小。</p>
</blockquote></li>
</ol>

<p><a name="Ex2Task2"></a></p>

<h4 id="Task_2_-_Managing_your_Database_with_the_Database_Manager_for_SQL_Database">任务 2 - 使用 SQL Database 的数据库管理器管理您的数据库</h4>

<p>在此任务中，您使用 SQL Database 的数据库管理器（它是在浏览器中运行的 Silverlight 客户端）连接到您的 SQL Database，创建并填充一个表，然后查询其内容。</p>

<ol>
<li><p>在 Windows Azure 管理门户用户界面主页中，选择左窗格中的 <strong>SQL Database</strong>，选择 <em>HoLTestDB</em> 数据库，然后单击底部窗格中的<strong>“管理”</strong>。</p>

<p><img src="Images/manage-database.png?raw=true" alt="管理数据库" />
</p>

<p><em>管理数据库</em></p></li>
<li><p>您将重定向到 <strong>SQL Database 管理门户</strong>。输入服务器管理员的用户名和密码，然后单击<strong>“登录”</strong>。</p>

<p><img src="Images/signingsqldatabasemanagementportal.png?raw=true" alt="登录 SQL Database 管理门户" />
</p>

<p><em>登录到 SQL Database 管理门户</em></p></li>
<li><p>等待连接到数据库并显示<strong>“管理”</strong>页。</p></li>
<li><p>在左窗格中选择 <strong>HoLTestDB</strong> 数据库。</p>

<p><img src="Images/sqldatabasemanagementportaladministrationpage.png?raw=true" alt="SQL Database 管理门户的“管理”页" />
</p>

<p><em>SQL Database 管理门户的“管理”页</em></p></li>
<li><p>在左窗格中，单击<strong>“设计”</strong>选项。</p>

<p><img src="Images/sqldatabasedesignview.png?raw=true" alt="SQL Database 设计视图" />
</p>

<p><em>SQL Database 设计视图</em></p></li>
<li><p>确保在导航菜单中选择了<strong>“表”</strong>选项，然后单击<strong>“新建表”</strong>。</p>

<p><img src="Images/creatingnewtable.png?raw=true" alt="创建新表" />
</p>

<p><em>创建新表</em></p></li>
<li><p>在表创建用户界面中，将表的<strong>“名称”</strong>设置为 <em>People</em>。</p></li>
<li><p>接着使用下面所示的信息定义三个表列，然后单击<strong>“保存”</strong>。</p>

<table><thead>
<tr>
<td><strong>列</strong></td>
<td><strong>类型</strong></td>
<td><strong>是标识？</strong></td>
<td><strong>是否必需？</strong></td>
<td><strong>是否为主键？</strong></td>
</tr>
</thead><tbody>
<tr>
<td>ID</td>
<td>Int</td>
<td>是</td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td>Name</td>
<td>nvarchar(50)</td>
<td>否</td>
<td>是</td>
<td>否</td>
</tr>
<tr>
<td>Age</td>
<td>Int</td>
<td>否</td>
<td>是</td>
<td>否</td>
</tr>
</tbody></table>
<p><img src="Images/creatingtableschema.png?raw=true" alt="创建表架构" />
</p>

<p><em>创建表架构</em></p></li>
<li><p>保存表后，单击导航菜单中的<strong>“数据”</strong>。</p>

<p><img src="Images/insertcaption.png?raw=true" alt="在导航菜单中选择数据" />
</p>

<p><em>在导航菜单中选择数据</em></p></li>
<li><p>现在，单击<strong>“添加行”</strong>，然后输入 <em>Name</em> 和 <em>Age</em> 列的示例数据。</p>

<table><thead>
<tr>
<td><strong>Name</strong></td>
<td><strong>Age</strong></td>
</tr>
</thead><tbody>
<tr>
<td>Alexandra</td>
<td>16</td>
</tr>
<tr>
<td>Ian</td>
<td>18</td>
</tr>
<tr>
<td>Marina</td>
<td>45</td>
</tr>
</tbody></table>
<p><img src="Images/addingrowstable.png?raw=true" alt="向表添加行" />
</p>

<p><em>向表添加行</em></p></li>
<li><p>添加完示例数据后，单击<strong>“保存”</strong>将数据提交到表。</p>

<p><img src="Images/savingdata.png?raw=true" alt="保存数据" />
</p>

<p><em>保存数据</em></p></li>
<li><p>接下来，单击功能区中的<strong>“新建查询”</strong>。</p></li>
<li><p>在查询窗口中，输入以下 T-SQL 语句以选择 <em>People</em> 表中的所有行，然后单击<strong>“运行”</strong>。验证“结果”网格是否显示您以前输入的行。</p>

<span class="codelanguage">T-SQL</span><pre><code class="T-SQL">select * from People
</code></pre>

<p><img src="Images/queryingdatabase.png?raw=true" alt="查询数据库" />
</p>

<p><em>查询数据库</em></p></li>
</ol>

<p><a name="Ex2Task3"></a></p>

<h4 id="Task_3_-_Managing_your_Database_with_SQL_Server_Management_Studio">任务 3 - 使用 SQL Server Management Studio 管理数据库</h4>

<p>在此任务中，您使用 SQL Server Management Studio 这个通常用于管理 SQL Server 的工具连接到 SQL Database 服务器并管理它。</p>

<ol>
<li><p>打开 <strong>SQL Server Management Studio</strong>。将显示登录对话框。</p></li>
<li><p>在<strong>“连接到服务器”</strong>对话框中，输入您的登录信息，确保选择了<strong>“SQL Server 身份验证”</strong>。SQL Database 当前仅支持 SQL Server 身份验证。</p>

<p><img src="Images/connectingsqldatabasessms.png?raw=true" alt="使用 SSMS 连接 SQL Database" />
</p>

<p><em>使用 SQL Server Management Studio 连接到 SQL Database</em></p></li>
<li><p>单击<strong>“连接”</strong>。</p></li>
<li><p>现在应在<strong>对象资源管理器</strong>中看到数据库的结构。请注意 SQL Database 与本地关系数据库没有什么不同。</p>

<p><img src="Images/objectexplorershowingdatabase.png?raw=true" alt="显示数据库的对象资源管理器" />
</p>

<p><em>对象资源管理器显示 HoLTestDB 数据库</em></p></li>
<li><p>在对象资源管理器中，选择树视图中的 <strong>HoLTestDB</strong> 数据库，然后单击工具栏上的<strong>“新建查询”</strong>。</p>

<p><img src="Images/creatingnewquerywindow.png?raw=true" alt="创建新查询窗口" />
</p>

<p><em>创建新查询窗口</em></p></li>
<li><p>您现在有一个查询窗口，它包含到您的帐户的活动连接。您可以通过显示 <strong>@@version</strong> 标量函数的结果测试您的连接。为此，请在查询窗口中键入以下语句并按<strong>“执行”</strong>按钮。您将得到一个标量结果，它指示 Microsoft SQL Database 的版本。</p>

<span class="codelanguage">T-SQL</span><pre><code class="T-SQL">SELECT @@version
</code></pre>

<p><img src="Images/retrievingsqlazureversion.png?raw=true" alt="检索 SQL Database 版本" />
</p>

<p><em>检索 SQL Database 版本</em></p></li>
<li><p>使用下面所示的语句替换上一个查询，然后单击<strong>“执行”</strong>。请注意“结果”网格显示当前可访问的数据库。</p>

<span class="codelanguage">T-SQL</span><pre><code class="T-SQL">SELECT * FROM sys.databases
</code></pre>

<p><img src="Images/queryresultsshwoinglistdatabases.png?raw=true" alt="显示数据库列表的查询结果" />
</p>

<p><em>查询结果显示您的订阅中的数据库列表</em></p></li>
<li><p>您可以通过执行以下查询检查自己是否在用户数据库的上下文中。确保您替换了上一个查询。</p>

<span class="codelanguage">T-SQL</span><pre><code class="T-SQL">SELECT db_name()
</code></pre>

<p><img src="Images/queryingdatabasecurrentlyuse.png?raw=true" alt="查询当前使用的数据库" />
</p>

<p><em>查询当前使用的数据库</em></p></li>
<li><p>请不要关闭查询窗口。在下一个任务中您会需要它。</p></li>
</ol>

<p><a name="Ex2Task4"></a></p>

<h4 id="Task_4_-_Creating_Logins_and_Database_Users">任务 4 - 创建登录名和数据库用户</h4>

<p>与 SQL Server 很相似，SQL Database 允许您创建更多登录名，然后将为这些登录名分配针对数据库的用户权限。在此任务中，您将创建一个新登录名，然后创建一个用户，该用户使用 <em>HoLTestDB</em> 数据库中的新登录名。</p>

<ol>
<li><p>打开连接到 <em>master</em> 数据库的新查询窗口。为此，请在<strong>对象资源管理器</strong>中展开<strong>“数据库”</strong>内的<strong>“系统数据库”</strong>节点，然后选择 <em>master</em>。接着单击工具栏上的<strong>“新建查询”</strong>。</p>

<p><img src="Images/queryingmasterdatabase.png?raw=true" alt="查询 Master 数据库" />
</p>

<p><em>查询 master 数据库</em></p>
<blockquote>
<p><strong>注意：</strong>您不能重复使用连接到 <em>HoLTestDB</em> 数据库的上一个查询窗口，因为在没有关闭当前连接的情况下无法更改数据库上下文。USE &lt;database_name&gt; 命令不适用于 SQL Database。因此，您需要打开一个新查询窗口或断开连接后重新连接，以从 <em>HoLTestDB</em> 切换到 <em>master</em> 数据库。</p>
</blockquote></li>
<li><p>通过执行以下语句来创建新的登录名：</p>

<!-- mark: 1 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=CREATE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">CREATE</a> LOGIN HoLUser <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=WITH&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">WITH</a> password=<span style="color:#8B0000">&#39;Password1&#39;</span></strong>
</code></pre>
<blockquote>
<p><strong>注意：</strong>您应为此登录帐户选择自己的密码并在整个实验过程中根据需要使用它。如果您未选择唯一的密码，应确保在完成实验后删除此登录名。为此，请在 <em>master</em> 数据库中执行以下语句：</p>

<p><strong>DROP LOGIN HoLUser</strong></p>
</blockquote></li>
<li><p>返回连接到 <em>HoLTestDB</em> 数据库的查询窗口。如果您关闭了此窗口，请通过在<strong>对象资源管理器</strong>中选择 <em>HoLTestDB</em> 数据库然后单击<strong>“新建查询”</strong>来再次打开它。</p></li>
<li><p>在查询窗口中，执行以下语句以在 HoLTestDB 数据库中为登录名 <em>HoLUser</em> 创建新用户。</p>

<!-- mark: 1-2 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><span style="color:#008000">-- Create a new user from the login and execute</span></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=CREATE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">CREATE</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=USER&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">USER</a> HoLUser <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=FROM&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">FROM</a> LOGIN HoLUser</strong>
</code></pre></li>
<li><p>接下来，通过执行以下语句将用户添加到 <em>HoLTestDB</em> 数据库的 <strong>db_owner</strong> 角色：</p>

<!-- mark: 1-2 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><span style="color:#008000">-- Add the new user to the db_owner role and execute</span></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=EXEC&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">EXEC</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=sp_addrolemember&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#FFA500">sp_addrolemember</a> <span style="color:#8B0000">&#39;db_owner&#39;</span>, <span style="color:#8B0000">&#39;HoLUser&#39;</span></strong>
</code></pre>
<blockquote>
<p><strong>注意：</strong>通过使您的用户成为 <strong>db_owner</strong> 角色的成员，您给该用户授予了广泛的权限集。在实际环境中，请务必小心以确保仅授予用户尽可能小的权限集。</p>
</blockquote></li>
<li><p>将与当前连接关联的用户更改为新创建的 <em>HoLUser</em>。为此，请右键单击查询窗口，指向<strong>“连接”</strong>，然后选择<strong>“更改连接”</strong>。</p>

<p><img src="Images/changingdatabaseconnectionproperties.png?raw=true" alt="更改数据库连接属性" />
</p>

<p><em>更改数据库连接属性</em></p></li>
<li><p>在<strong>“连接到数据库引擎”</strong>对话框中，使用 <em>HoLUser</em> 替换<strong>“登录”</strong>名并将<strong>“密码”</strong>设置为您以前在创建该数据库用户时选择的值。</p>

<p><img src="Images/connectingdatabasedifferentuser.png?raw=true" alt="使用其他用户身份连接数据库" />
</p>

<p><em>以其他用户的身份连接到数据库</em></p></li>
<li><p>单击<strong>“选项”</strong>以显示其他连接设置。切换到<strong>“连接属性”</strong>选项卡并确保此连接的数据库名称为 <em>HoLTestDB</em>。如果当前值不同，您将需要键入此值而非使用下拉列表，然后按<strong>“连接”</strong>按钮。</p>

<p><img src="Images/connectingspecificdatabase.png?raw=true" alt="连接特定数据库" />
</p>

<p><em>连接到特定数据库</em></p>
<blockquote>
<p><strong>注意：</strong>您现在以 <em>HoLUser</em> 数据库用户身份连接到该数据库。您将在此练习的其余步骤中继续使用此用户。</p>
</blockquote></li>
</ol>

<p><a name="Ex2Task5"></a></p>

<h4 id="Task_5_-_Creating_Tables_Indices_and_Queries">任务 5 - 创建表、索引和查询</h4>

<ol>
<li><p>在查询窗口中，使用以下 SQL 查询替换当前内容以创建 <em>Contact</em> 表并执行它。</p>

<!-- mark: 1-9 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=CREATE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">CREATE</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=TABLE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">TABLE</a> [Contact](</strong>
<strong class="markLine">    [ContactID] [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=int&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">int</a>] <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=IDENTITY&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">IDENTITY</a>(1,1) <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NOT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NOT</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NULL&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NULL</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=PRIMARY&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">PRIMARY</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=KEY&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">KEY</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=CLUSTERED&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">CLUSTERED</a>,</strong>
<strong class="markLine">    [Title] [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=nvarchar&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">nvarchar</a>](8) <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NULL&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NULL</a>,</strong>
<strong class="markLine">    [FirstName] [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=nvarchar&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">nvarchar</a>](50) <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NOT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NOT</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NULL&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NULL</a>,</strong>
<strong class="markLine">    [LastName] [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=nvarchar&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">nvarchar</a>](50) <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NOT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NOT</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NULL&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NULL</a>,</strong>
<strong class="markLine">    [EmailAddress] [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=nvarchar&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">nvarchar</a>](50) <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NULL&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NULL</a>,</strong>
<strong class="markLine">    [Phone] [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=nvarchar&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">nvarchar</a>](30) <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NULL&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NULL</a>,</strong>
<strong class="markLine">    [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=Timestamp&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">Timestamp</a>] [<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=timestamp&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">timestamp</a>] <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NOT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NOT</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=NULL&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">NULL</a></strong>
<strong class="markLine">)</strong>
</code></pre>
<blockquote>
<p><strong>注意：</strong>SQL Database 要求每个表具有聚集索引。如果您创建不包含聚集索引的表，在创建聚集索引前将无法将行插入表。因为聚集索引决定磁盘上行的顺序，因此将影响某些查询，您可以选择对除主键列之外的某个列设置聚集索引。</p>
</blockquote></li>
<li><p>您将对 <em>EmailAddress</em> 字段添加索引。为此，请执行以下查询：</p>

<!-- mark: 1-2 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=CREATE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">CREATE</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=INDEX&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">INDEX</a> IX_Contact_EmailAddress</strong>
<strong class="markLine">    <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=ON&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">ON</a> Contact(EmailAddress)</strong>
</code></pre></li>
<li><p>执行以下查询以将一个行添加到新的 <em>Contact</em> 表：</p>

<!-- mark: 1-4 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=INSERT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">INSERT</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=INTO&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">INTO</a> [Contact]</strong>
<strong class="markLine">([Title],[FirstName],[LastName],[EmailAddress],[Phone])</strong>
<strong class="markLine">     <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=VALUES&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">VALUES</a></strong>
<strong class="markLine">(<span style="color:#8B0000">&#39;Mr&#39;</span>,<span style="color:#8B0000">&#39;David&#39;</span>,<span style="color:#8B0000">&#39;Alexander&#39;</span>,<span style="color:#8B0000">&#39;davida@fabrikam.com&#39;</span>,<span style="color:#8B0000">&#39;555-1234-5555&#39;</span>)</strong>
</code></pre></li>
<li><p>现在，查询收回的数据，但是首先启用 SHOWPLAN_ALL 选项来显示执行计划。为此，请执行以下查询：</p>

<!-- mark: 1-5 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SET&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SET</a> SHOWPLAN_ALL <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=ON&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">ON</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=GO&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">GO</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SELECT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SELECT</a> * <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=FROM&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">FROM</a> Contact <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=WHERE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">WHERE</a> EmailAddress =<span style="color:#8B0000">&#39;davida@fabrikam.com&#39;</span></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=GO&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">GO</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SET&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SET</a> SHOWPLAN_ALL <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=OFF&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">OFF</a></strong>
</code></pre>

<p><img src="Images/queryexecutionplansmallset.png?raw=true" alt="小数据集的查询执行计划" />
</p>

<p><em>小数据集的查询执行计划</em></p></li>
<li><p>接下来，您将向数据库添加大量行，然后再次检查查询计划。为此，请执行以下查询来创建名为 <em>AddData</em> 的存储过程。此存储过程将每次使计数器递增并添加包含样式为 [Counter]<a href="mailto:davida@fabrikam.com">davida@fabrikam.com</a> 的电子邮件地址的新记录：</p>

<!-- mark: 1-13 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=CREATE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">CREATE</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=PROCEDURE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">PROCEDURE</a> AddData</strong>
<strong class="markLine">@NumRows <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=int&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">int</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=AS&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">AS</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=DECLARE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">DECLARE</a> @counter <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=int&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">int</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SELECT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SELECT</a> @counter = 1</strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=WHILE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">WHILE</a> (@counter &lt; @NumRows)</strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=BEGIN&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">BEGIN</a></strong>
<strong class="markLine">    <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=INSERT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">INSERT</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=INTO&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">INTO</a> [Contact]</strong>
<strong class="markLine">        ([Title],[FirstName],[LastName],[EmailAddress],[Phone])</strong>
<strong class="markLine">        <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=VALUES&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">VALUES</a></strong>
<strong class="markLine">        (<span style="color:#8B0000">&#39;Mr&#39;</span>,<span style="color:#8B0000">&#39;David&#39;</span>,<span style="color:#8B0000">&#39;Alexander&#39;</span>,<a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=CAST&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">CAST</a>(@counter <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=as&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">as</a> <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=nvarchar&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">nvarchar</a>)+<span style="color:#8B0000">&#39;davida@fabrikam.com&#39;</span>,<span style="color:#8B0000">&#39;555-1234-5555&#39;</span>)</strong>
<strong class="markLine">        <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SELECT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SELECT</a> @counter = @counter + 1</strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=END&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">END</a></strong>
</code></pre></li>
<li><p>现在，通过执行新存储过程将 10,000 行插入 <em>Contact</em> 表。每行将具有唯一的电子邮件地址。为此，请执行以下 T-SQL 语句：</p>

<!-- mark: 1 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=EXEC&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">EXEC</a> AddData 10000</strong>
</code></pre>
<blockquote>
<p><strong>注意：</strong>可能需要一段时间来生成 10,000 行。</p>
</blockquote></li>
<li><p>再次执行以下查询并检查生成的计划。将此结果与之前表包含很少行的时候得到的结果进行比较。</p>

<!-- mark: 1-5 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SET&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SET</a> SHOWPLAN_ALL <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=ON&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">ON</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=GO&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">GO</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SELECT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SELECT</a> * <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=FROM&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">FROM</a> Contact <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=WHERE&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">WHERE</a> EmailAddress =<span style="color:#8B0000">&#39;davida@fabrikam.com&#39;</span></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=GO&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">GO</a></strong>
<strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SET&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SET</a> SHOWPLAN_ALL <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=OFF&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">OFF</a></strong>
</code></pre>

<p><img src="Images/queryexecutionplanlargeset.png?raw=true" alt="大数据集的查询执行计划" />
</p>

<p><em>大数据集的查询执行计划</em></p>
<blockquote>
<p><strong>注意：</strong>请注意第二次运行时查询优化器很可能使用您定义的查询：这是查询计划中的“Index Seek”行。</p>
</blockquote></li>
<li><p>对于大部分内容，您可以使用以前用于本地 SQL Server 的任意工具。有关这方面的示例，请查看以图形方式显示的查询计划。在 SQL Server Management Studio 中，按 <strong>Ctrl-L</strong> 以显示<strong>“估计的执行计划”</strong>。</p>

<p><img src="Images/showingqueryexecutionplangraphically.png?raw=true" alt="以图形方式显示查询执行计划" />
</p>

<p><em>以图形方式显示查询执行计划</em></p></li>
</ol>

<p><a name="Exercise3"></a></p>

<h3 id="Exercise_3_Build_a_Windows_Azure_Application_that_Accesses_SQL_Database">练习 3：生成访问 SQL Database 的 Windows Azure 应用程序</h3>

<p>在此练习中，您将创建一个简单 Windows Azure 应用程序来对 <em>AdventureWorksLT2008</em> 数据库中的 <em>Customer</em> 表数据进行操作。</p>

<p>此练习的目的是演示使用图形 Visual Studio“拖放”方法来操作 SQL Database 和 Windows Azure 是多么简单。</p>

<p><a name="Ex3Task1"></a></p>

<h4 id="Task_1_-_Loading_the_Sample_Database_into_SQL_Database">任务 1 - 将示例数据库加载到 SQL Database</h4>

<ol>
<li>使用您在以前练习中创建的 <em>HoLUser</em> 登录名连接到 SQL Database 服务器上的 <em>HoLTestDB</em> 数据库。您可以使用 SQL Server Management Studio 或 SQL Database 的数据库管理器来执行这些步骤。</li>
<li><p>如果您使用的是 SQL Server Management Studio，请在<strong>“文件”</strong>菜单中选择<strong>“打开”</strong>|<strong>“文件”</strong>，然后导航到此实验 <strong>Source</strong> 文件夹中的 <strong>Assets</strong> 文件夹；如果您使用的是 SQL Database 的数据库管理器，请选择左上角中的<strong>“数据库”</strong>上下文，然后单击<strong>“文件”</strong>组中的<strong>“打开查询”</strong>按钮。选择 <strong>AdventureWorks2008LT_Azure.sql</strong> 文件，然后单击<strong>“打开”</strong>。</p>
<blockquote>
<p><strong>注意：</strong>此脚本包含 <em>AdventureWorksLT2008</em> 示例数据库中的一个已清理的导出脚本，该数据库可从 <a href="http://msftdbprodsamples.codeplex.com/">Codeplex 示例数据库项目网站</a>上下载。</p>
</blockquote></li>
<li><p>执行查询。这可能需要几分钟时间，因为您正在创建 Adventure Works 数据库的子集。</p></li>
</ol>

<p><a name="Ex3Task2"></a></p>

<h4 id="Task_2_-_Creating_the_Visual_Studio_Project">任务 2 - 创建 Visual Studio 项目</h4>

<p>在此任务中，您为 Windows Azure 网站创建一个新的 Visual Studio 项目。</p>

<ol>
<li><p>通过右键单击 <strong>Microsoft Visual Studio Express 2012 for Web</strong> 快捷方式并选择<strong>“以管理员身份运行”</strong>，在提升的管理员模式下打开 Microsoft Visual Studio Express 2012 for Web。</p></li>
<li><p>如果显示<strong>“用户帐户控制”</strong>对话框，请单击<strong>“继续”</strong>。</p></li>
<li><p>从<strong>“文件”</strong>菜单中选择<strong>“新建”</strong>，再选择<strong>“项目”</strong>。</p></li>
<li><p>在<strong>“新建项目”</strong>对话框中，展开<strong>“已安装的模板”</strong>列表中的 <strong>Visual C#</strong>，然后选择<strong>“云”</strong>。</p></li>
<li><p>在<strong>“模板”</strong>列表中，选择<strong>“Windows Azure 云服务”</strong>。将项目的名称设置为 <strong>AdventureWorks</strong>，然后将位置设置为实验的 <strong>Source</strong> 文件夹中的 <strong>Ex3-BuildingSQLAzureApp</strong> 内。确保选中<strong>“创建解决方案的目录”</strong>，然后将解决方案的名称设置为 <strong>Begin</strong>。单击<strong>“确定”</strong>创建项目。</p>

<p><img src="Images/creatingnewwebcloudservice.png?raw=true" alt="创建新的 Web 云服务" />
</p>

<p><em>创建新的 Web 云服务</em></p></li>
<li><p>在<strong>“新建 Windows Azure 项目”</strong>对话框中，在<strong>“角色”</strong>面板内展开 Visual C# 的选项卡，从可用角色的列表中选择<strong>“ASP.NET Web 角色”</strong>，然后单击右边的按钮 <strong>(&gt;)</strong> 以将此角色的实例添加到解决方案。在关闭对话框前，选择右边面板中的新角色，单击铅笔图标，然后将角色重命名为 <strong>AdventureWorksWeb</strong>。单击<strong>“确定”</strong>以创建云服务解决方案。</p>

<p><img src="Images/addingwebrolesolution.png?raw=true" alt="将 Web 角色添加到解决方案" />
</p>

<p><em>将 Web 角色添加到解决方案</em></p></li>
<li><p>项目模板完成创建项后，应显示 <strong>Default.aspx</strong> 页。如果没有，请打开此文件。</p></li>
<li><p>确保您正在设计视图中查看 Default.aspx 页，然后单击<strong>“设计”</strong>按钮。</p></li>
<li><p>将 <strong>GridView</strong> 控件从工具箱的<em>“数据”</em>部分拖放到此设计画布。</p>

<p><img src="Images/addinggridviewcontrol.png?raw=true" alt="添加 GridView 控件" />
</p>

<p><em>添加 GridView 控件</em></p></li>
<li><p>从新创建的 GridView 右上角的 <em>SmartTag</em>，选择<strong>“选择数据源”</strong>组合框中的<strong>“新建数据源”</strong>选项。</p>

<p><img src="Images/creatingnewdatasource.png?raw=true" alt="创建新数据源" />
</p>

<p><em>创建新数据源</em></p></li>
<li><p>在<strong>数据源配置向导</strong>中，选择<strong>“数据库”</strong>的数据源类型并保留默认 ID。单击<strong>“确定”</strong>。</p>

<p><img src="Images/choosingdatasource.png?raw=true" alt="选择数据源" />
</p>

<p><em>选择数据源</em></p></li>
<li><p>在<strong>“配置数据源”</strong>对话框中，单击<strong>“新建连接”</strong>。</p>

<p><img src="Images/creatingnewconnection.png?raw=true" alt="创建新连接" />
</p>

<p><em>创建新连接</em></p></li>
<li><p>如果<strong>“选择数据源”</strong>对话框提示您，请选择 <strong>Microsoft SQL Server</strong>，然后单击<strong>“继续”</strong>。</p></li>
<li><p>现在配置到 SQL Database 的连接。在<strong>“添加连接”</strong>对话框中，确保提供程序为 <strong>Microsoft SQL Server (SqlClient)</strong>，选择<strong>“数据源”</strong>列表中的 <strong>Microsoft SQL Server</strong> 以及“数据访问接口”组合框中的 <strong>.NET Framework Data Provider for SQL Server</strong>。然后将<strong>“服务器名称”</strong>设置为 SQL Database 的名称。接下来，将身份验证类型更改为<strong>“使用 SQL Server 身份验证”</strong>并键入 SQL Database 的凭据。最后，在数据库名称下拉列表中输入 <em>HoLTestDB</em>。</p>

<p><img src="Images/configuringconnectiondatabasesqldatabase.png?raw=true" alt="配置指向 SQL Database 中数据库的连接" />
 </p>

<p><em>配置指向 SQL Database 中 HolTestDB 数据库的连接</em></p></li>
<li><p>按<strong>“测试连接”</strong>。如果连接信息正确，应显示指示成功的对话框。单击<strong>“确定”</strong>继续。</p>

<p><img src="Images/confirmationsuccesfulconnection.png?raw=true" alt="确认连接成功" />
</p>

<p><em>确认连接成功</em></p></li>
<li><p>单击<strong>“确定”</strong>以关闭<strong>“添加连接”</strong>对话框。</p></li>
<li><p>单击<strong>“下一步”</strong>以继续执行<strong>数据源配置向导</strong>。</p></li>
<li><p>确保选中<strong>“是，将此连接另存为”</strong>选项，将连接名称设置为 <strong>AdventureWorksLTConnectionString</strong>，然后单击<strong>“下一步”</strong>。</p>

<p><img src="Images/savingconnectionstring.png?raw=true" alt="保存连接字符串" />
</p>

<p><em>在应用程序配置文件中保存连接字符串</em></p></li>
<li><p>选择<strong>“指定自定义 SQL 语句或存储过程”</strong>选项，然后单击<strong>“下一步”</strong>。</p>

<p><img src="Images/usingcustomsqlstatement.png?raw=true" alt="使用自定义 SQL 语句" />
</p>

<p><em>使用自定义 SQL 语句查询数据库</em></p>
<blockquote>
<p><strong>注意：</strong>您不能使用<strong>“指定来自表或视图的列”</strong>选项，因为 <em>AdventureWorks</em> 使用需要显式引用的已命名架构 (SalesLT)。</p>
</blockquote></li>
<li><p>将以下语句粘贴到<strong>“SQL 语句”</strong>框，然后单击<strong>“下一步”</strong>。</p>

<!-- mark: 1 -->

<span class="codelanguage">SQL</span><pre><code class="SQL"><strong class="markLine"><a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=SELECT&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">SELECT</a> [FirstName], [LastName], [CompanyName], [EmailAddress] <a href="http://search.microsoft.com/default.asp?so=RECCNT&siteid=us%2Fdev&p=1&nq=NEW&qu=FROM&IntlSearch=&boolean=PHRASE&ig=01&i=09&i=99" style="color:#0000FF">FROM</a> [SalesLT].[Customer]</strong>
</code></pre>

<p><img src="Images/definingcustomsqlstatement.png?raw=true" alt="定义自定义 SQL 语句" />
</p>

<p><em>定义自定义 SQL 语句</em></p></li>
<li><p>按<strong>“测试查询”</strong>，您应看到返回的结果。</p>

<p><img src="Images/testingqueryagainstdatabase.png?raw=true" alt="针对数据库测试查询" />
</p>

<p><em>针对数据库测试查询</em></p></li>
<li><p>单击<strong>“完成”</strong>。</p></li>
<li><p>按 <strong>F5</strong> 在计算模拟器中运行应用程序。</p></li>
<li><p>应用程序将执行，您将在浏览器中看到所有客户的列表：</p>

<p><img src="Images/retrievinglistcustomersdatabase.png?raw=true" alt="从数据库检索客户列表" />
</p>

<p><em>从数据库检索客户列表</em></p></li>
<li><p>关闭浏览器窗口。</p></li>
</ol>

<p><a name="Exercise4"></a></p>

<h3 id="Exercise_4_Connecting_via_Client_Libraries">练习 4：通过客户端库建立连接</h3>

<p>在此练习中，您将学习如何使用 ADO.NET、ODBC、OLEDB 和 LINQ to SQL 技术连接到 SQL Database 并执行一些简单的 T-SQL 操作。此外，您将了解如何使用诸如 Java 和 PHP 等其他技术连接到数据库。</p>

<p>使用 Microsoft 技术时，您将看到从您的应用程序与 Windows Azure SQL Database 交互的方式与传统 SQL Database 相同。这些技术的主要不同之处在于用于连接到 Windows Azure SQL Database 的连接类型和连接字符串。在建立连接后，您可以使用“DbCommand”的相应继承器发出命令。</p>

<p><a name="Ex4Task1"></a></p>

<h4 id="Task_1_-_Opening_the_Begin_Solution_and_Exploring_the_Common_Functionalities">任务 1 - 打开起始解决方案并了解常见功能</h4>

<p>您将测试连接到 SQL Database 的不同 Microsoft 技术并针对新表执行某些任务。为了避免花时间实现创建、插入、查询和删除表的逻辑，此练习提供一个实现这些常见功能的起始解决方案。这样您可以重点学习如何连接到 SQL Database 并了解所提及的技术之间的差异。</p>

<p>在此任务中，您将打开 <strong>ConnectDemoApp</strong> 解决方案并使用 <strong>SQLDatabaseConnectionDemo</strong> 类。在练习期间，对于每种数据访问技术的不同实现，您将从此类继承。</p>

<ol>
<li><p>打开 <strong>Microsoft Visual Studio Express 2012 for Desktop</strong>。</p></li>
<li><p>打开为此练习提供的起始解决方案。为此，请从<strong>“文件”</strong>菜单中选择<strong>“打开项目”</strong>。在<strong>“打开项目”</strong>对话框中，导航到此实验的 <strong>Source</strong> 文件夹内的 <strong>Ex4-ConnectingViaClientLibraries\Begin</strong>，然后打开解决方案 <strong>Begin.sln</strong>。应打开包含以下结构的解决方案。</p>

<p><img src="Images/connectdemoappsolutionstructure.png?raw=true" alt="连接演示应用程序解决方案的结构" />
  </p>

<p><em>连接演示应用程序解决方案的结构</em></p></li>
<li><p>如前所述，您将根据从 <strong>SQLDatabaseConnectionDemo</strong> 抽象类继承的每种技术创建一个类。此类提供常见功能以使用您在派生类中实现的提供程序针对 SQL Database 执行基本操作。下表说明此类中的每个方法，以使您了解它的工作方式并决定需要在派生类中实现的方法：</p>

<table><thead>
<tr>
<td><strong>方法</strong></td>
<td><strong>类型</strong></td>
<td><strong>说明</strong></td>
</tr>
</thead><tbody>
<tr>
<td>CreateConnection</td>
<td>抽象</td>
<td>一个派生类实现此方法以便根据基础技术创建连接。</td>
</tr>
<tr>
<td>CreateCommand</td>
<td>抽象</td>
<td>一个派生类实现此方法以便根据基础技术创建命令。</td>
</tr>
<tr>
<td>GetServerName</td>
<td></td>
<td>从数据源返回服务器名称。它是创建到数据库的连接所需的常见任务。</td>
</tr>
<tr>
<td>ConnectToSQLDatabase</td>
<td></td>
<td>基于将对派生类实现的 CreateConnection 抽象方法的结果设置连接属性。针对 SQL Database 执行演示流。它使用 CreateCommand 方法从派生类获取命令，然后执行 Execute* 方法来创建、填充、查询和删除演示表。</td>
</tr>
<tr>
<td>ExecuteCreateDemoTableStatement</td>
<td></td>
<td>执行一个 create table 语句以创建 DemoTable 表。</td>
</tr>
<tr>
<td>ExecuteInsertTestDataStatement</td>
<td></td>
<td>针对 DemoTable 表执行一个 insert 语句。</td>
</tr>
<tr>
<td>ExecuteReadInsertedTestData</td>
<td></td>
<td>执行一个 select 语句以尝试检索上一个方法插入的数据并调用 ReadData 方法以在控制台中显示它。</td>
</tr>
<tr>
<td>ReadData</td>
<td></td>
<td>读取从表中检索的数据并在控制台中显示它。</td>
</tr>
<tr>
<td>ExecuteDropDemoTable</td>
<td></td>
<td>执行一个 delete 语句以从 SQL Database 删除 DemoTable 表。</td>
</tr>
</tbody></table>
<p>请注意您只需要对每种技术的实现重写 <strong>CreateConnection</strong> 和 <strong>CreateCommand</strong> 方法，就可以成功创建到 SQL Database 的连接。</p></li>
</ol>

<p><a name="Ex4Task2"></a></p>

<h4 id="Task_2_-_Connecting_to_SQL_Database_Using_ADONET">任务 2 - 使用 ADO.NET 连接到 SQL Database</h4>

<p>在此任务中，您将创建从 <strong>SQLDatabaseConnectionDemo</strong> 类继承的类并实现相应方法以使用 ADO.NET 连接到 SQL Database。</p>

<ol>
<li><p>将新类添加到名为 <strong>AdoConnectionDemo</strong> 的项目。为此，请在<strong>解决方案资源管理器</strong>中右键单击 <strong>ConnectDemoApp</strong> 项目，然后选择<strong>“添加”</strong>|<strong>“类”</strong>。在<strong>“添加新项”</strong>对话框中，确保您选择了<strong>“类”</strong>模板并将名称设置为 <strong>AdoConnectionDemo.cs</strong>。</p></li>
<li><p>确保您在文件顶部包含以下命名空间指令：</p>

<!-- mark: 1-2 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">using</span> System.Data.Common;</strong>
<strong class="markLine"><span style="color:#0000FF">using</span> System.Data.SqlClient;</strong>
</code></pre></li>
<li><p>将类定义更新为从 <strong>SQLDatabaseConnectionDemo</strong> 继承。该文件应该如下所示：</p>

<!-- mark: 1 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">public</span> <span style="color:#0000FF">class</span> AdoConnectionDemo : SQLDatabaseConnectionDemo</strong>
{ }
</code></pre></li>
<li><p><strong>SQLDatabaseConnectionDemo</strong> 类将连接构造委托给派生类。重写 <strong>CreateConnection</strong> 方法以在 <strong>AdoConnectionDemo</strong> 类中创建 <strong>SQLDatabaseConnection</strong>：</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ADO CreateConnection - C#</em>）</p>

<!-- mark: 1-4 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">protected</span> <span style="color:#0000FF">override</span> DbConnection CreateConnection(<span style="color:#0000FF">string</span> userName, <span style="color:#0000FF">string</span> password, <span style="color:#0000FF">string</span> dataSource, <span style="color:#0000FF">string</span> databaseName)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> <span style="color:#0000FF">new</span> SqlConnection(<span style="color:#0000FF">this</span>.CreateAdoConnectionString(userName, password, dataSource, databaseName));</strong>
<strong class="markLine">}</strong>
</code></pre></li>
<li><p>实现由 <strong>CreateConnection</strong> 方法使用的 <strong>CreateAdoConnectionString</strong> 方法。此方法负责生成 ADO.NET 连接的连接字符串，该连接利用基础实现中的 <strong>SqlConnectionStringBuilder</strong> 类。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ADO CreateAdoConnectionString method - C#</em>）</p>

<!-- mark: 1-15 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">private</span> <span style="color:#0000FF">string</span> CreateAdoConnectionString(<span style="color:#0000FF">string</span> userName, <span style="color:#0000FF">string</span> password, <span style="color:#0000FF">string</span> dataSource, <span style="color:#0000FF">string</span> databaseName)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#008000">// create a new instance of the SQLConnectionStringBuilder</span></strong>
<strong class="markLine">  SqlConnectionStringBuilder connectionStringBuilder = <span style="color:#0000FF">new</span> SqlConnectionStringBuilder</strong>
<strong class="markLine">  {</strong>
<strong class="markLine">    DataSource = dataSource,</strong>
<strong class="markLine">    InitialCatalog = databaseName,</strong>
<strong class="markLine">    Encrypt = <span style="color:#0000FF">true</span>,</strong>
<strong class="markLine">    TrustServerCertificate = <span style="color:#0000FF">false</span>,</strong>
<strong class="markLine">    UserID = userName,</strong>
<strong class="markLine">    Password = password,</strong>
<strong class="markLine">  };</strong>
<strong class="markLine"></strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> connectionStringBuilder.ToString();</strong>
<strong class="markLine">}</strong>
</code></pre></li>
<li><p>重写 <strong>CreateCommand</strong> 方法以创建 ADO.NET 命令。请记住在父类中调用此抽象方法以获取连接并执行不同的 SQL 语句示例。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ADO CreateCommand method - C#</em>）</p>

<!-- mark: 1-4 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">protected</span> <span style="color:#0000FF">override</span> DbCommand CreateCommand(DbConnection connection)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> <span style="color:#0000FF">new</span> SqlCommand() { Connection = connection <span style="color:#0000FF">as</span> SqlConnection };</strong>
<strong class="markLine">}</strong>
</code></pre>

<p>这是使用 ADO.NET 连接所需的所有代码。现在您将在 <strong>Program.cs</strong> 文件中包含一些代码以测试连接并查看不同操作的工作方式。</p></li>
<li><p>通过在<strong>解决方案资源管理器</strong>中双击 <strong>ConnectDemoApp</strong> 项目内的 <strong>Program.cs</strong> 文件打开该文件。</p></li>
<li><p>实现相应逻辑以创建 <strong>AdoConnectionDemo</strong> 类的实例并针对 SQL Database 执行该演示。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ADO demo implementation - C#</em>）</p>

<!-- mark: 3-8 - -->

<span class="codelanguage">C#</span><pre><code class="C#"><span style="color:#0000FF">static</span> <span style="color:#0000FF">void</span> Main(<span style="color:#0000FF">string</span>[] args) {
<strong class="markLine">  <span style="color:#008000">// Invoke the ADO.NET connection demo</span></strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Starting the ADO.NET Connection Demo...&quot;</span>);</strong>
<strong class="markLine">  AdoConnectionDemo demo1 = <span style="color:#0000FF">new</span> AdoConnectionDemo();</strong>
<strong class="markLine">  demo1.ConnectToSQLDatabase(userName, password, datasource, databaseName);</strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Demo Complete... Press any key&quot;</span>);</strong>
<strong class="markLine">  Console.ReadKey();</strong>
}
</code></pre></li>
<li><p>查找紧挨方法 <strong>Main</strong> 之上声明的成员变量并使用 SQL Database 的连接信息更新占位符。</p>

<p><img src="Images/configuringconnectionparameterssqlazure.png?raw=true" alt="配置 SQL Database 的连接参数" />
</p>

<p><em>配置 SQL Database 的连接参数</em></p>
<blockquote>
<p><strong>注意：</strong>请务必插入不带服务器引用的用户名，例如，使用 <em>sqladmin</em> 而不是 <em>sqladmin@[SERVERNAME]</em>。</p>
</blockquote></li>
<li><p>通过按 <strong>F5</strong> 运行应用程序。您应在控制台窗口中看到以下输出。</p>

<p><img src="Images/expectedoutputadonetconnectiondemo.png?raw=true" alt="ADO.NET 连接演示的预期输出" />
</p>

<p><em>ADO.NET 连接演示的预期输出</em></p></li>
</ol>

<p><a name="Ex4Task3"></a></p>

<h4 id="Task_3_-_Connecting_to_SQL_Database_Using_ODBC">任务 3 - 使用 ODBC 连接到 SQL Database</h4>

<p>在此任务中，您将创建从 <strong>SQLDatabaseConnectionDemo</strong> 类继承的类并实现相应方法以使用 ODBC 连接到 SQL Database。</p>

<ol>
<li><p>将新类添加到名为 <strong>OdbcConnectionDemo</strong> 的项目。为此，请在<strong>解决方案资源管理器</strong>中右键单击 <strong>ConnectDemoApp</strong> 项目，然后选择<strong>“添加”</strong>|<strong>“类”</strong>。在<strong>“添加新项”</strong>对话框中，确保您选择了<strong>“类”</strong>模板并将名称设置为 <strong>OdbcConnectionDemo.cs</strong>。</p></li>
<li><p>确保您在文件顶部包含以下命名空间指令：</p>

<!-- mark: 1-2 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">using</span> System.Data.Common;</strong>
<strong class="markLine"><span style="color:#0000FF">using</span> System.Data.Odbc;</strong>
</code></pre></li>
<li><p>将类定义更新为从 <strong>SQLDatabaseConnectionDemo</strong> 继承。该文件应该如下所示：</p>

<!-- mark: 1 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">public</span> <span style="color:#0000FF">class</span> OdbcConnectionDemo : SQLDatabaseConnectionDemo</strong>
{ }
</code></pre></li>
<li><p>重写 <strong>CreateConnection</strong> 方法以在 <strong>OdbcConnectionDemo</strong> 类中创建 <strong>OdbcConnection</strong>：</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ODBC CreateConnection - C#</em>）</p>

<!-- mark: 1-4 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">protected</span> <span style="color:#0000FF">override</span> DbConnection CreateConnection(<span style="color:#0000FF">string</span> userName, <span style="color:#0000FF">string</span> password, <span style="color:#0000FF">string</span> dataSource, <span style="color:#0000FF">string</span> databaseName)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> <span style="color:#0000FF">new</span> OdbcConnection(<span style="color:#0000FF">this</span>.CreateOdbcConnectionString(userName, password, dataSource, databaseName));</strong>
<strong class="markLine">}</strong>
</code></pre></li>
<li><p>实现由 <strong>CreateConnection</strong> 方法使用的 <strong>CreateOdbcConnectionString</strong> 方法。此方法负责生成 ODBC 驱动程序连接字符串。建议的实现使用 <strong>SQL Server Native Client 11.0</strong> 作为其驱动程序。您可以在此处指定偏爱的任何其他 ODBC 驱动程序。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ODBC CreateOdbcConnectionString method - C#</em>）</p>

<!-- mark: 1-14 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">private</span> <span style="color:#0000FF">string</span> CreateOdbcConnectionString(<span style="color:#0000FF">string</span> userName, <span style="color:#0000FF">string</span> password, <span style="color:#0000FF">string</span> dataSource, <span style="color:#0000FF">string</span> databaseName)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">string</span> serverName = GetServerName(dataSource);</strong>
<strong class="markLine"></strong>
<strong class="markLine">  OdbcConnectionStringBuilder connectionStringBuilder = <span style="color:#0000FF">new</span> OdbcConnectionStringBuilder</strong>
<strong class="markLine">  {</strong>
<strong class="markLine">    Driver = <span style="color:#8B0000">&quot;SQL Server Native Client 11.0&quot;</span>,</strong>
<strong class="markLine">  };</strong>
<strong class="markLine">  connectionStringBuilder[<span style="color:#8B0000">&quot;Server&quot;</span>] = <span style="color:#8B0000">&quot;tcp:&quot;</span> + dataSource;</strong>
<strong class="markLine">  connectionStringBuilder[<span style="color:#8B0000">&quot;Database&quot;</span>] = databaseName;</strong>
<strong class="markLine">  connectionStringBuilder[<span style="color:#8B0000">&quot;Uid&quot;</span>] = userName + <span style="color:#8B0000">&quot;@&quot;</span> + serverName;</strong>
<strong class="markLine">  connectionStringBuilder[<span style="color:#8B0000">&quot;Pwd&quot;</span>] = password;</strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> connectionStringBuilder.ConnectionString;</strong>
<strong class="markLine">}</strong>
</code></pre></li>
<li><p>重写 <strong>CreateCommand</strong> 方法以创建 <strong>OdbcCommand</strong>。请记住在父类中调用此抽象方法以获取连接并执行不同的 SQL 语句示例。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ODBC CreateCommand method - C#</em>）</p>

<!-- mark: 1-4 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">protected</span> <span style="color:#0000FF">override</span> DbCommand CreateCommand(DbConnection connection)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> <span style="color:#0000FF">new</span> OdbcCommand() { Connection = connection <span style="color:#0000FF">as</span> OdbcConnection };</strong>
<strong class="markLine">}</strong>
</code></pre>

<p>这是使用 ODBC 连接所需的特定代码。现在您将在 <strong>Program.cs</strong> 文件中包含一些代码以测试连接并查看不同操作的工作方式。</p></li>
<li><p>通过在<strong>解决方案</strong><strong>资源管理器</strong>中双击 <strong>ConnectDemoApp</strong> 项目内的 <strong>Program.cs</strong> 文件打开该文件。</p></li>
<li><p>在方法 <strong>Main</strong> 中，实现相应逻辑以创建 <strong>OdbcConnectionDemo</strong> 类的新实例并针对 SQL Database 执行该演示。您可以根据是要立即测试所有技术还是仅测试此技术，添加或替换上述任务中的代码。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 ODBC demo implementation - C#</em>）</p>

<!-- mark: 5-10 -->

<span class="codelanguage">C#</span><pre><code class="C#"><span style="color:#0000FF">static</span> <span style="color:#0000FF">void</span> Main(<span style="color:#0000FF">string</span>[] args) {
  <span style="color:#008000">//...</span>

<strong class="markLine">  <span style="color:#008000">// Invoke the ODBC connection demo</span></strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Starting the ODBC Connection Demo...&quot;</span>);</strong>
<strong class="markLine">  OdbcConnectionDemo demo2 = <span style="color:#0000FF">new</span> OdbcConnectionDemo();</strong>
<strong class="markLine">  demo2.ConnectToSQLDatabase(userName, password, datasource, databaseName);</strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Demo Complete... Press any key&quot;</span>);</strong>
<strong class="markLine">  Console.ReadKey();</strong>
}
</code></pre></li>
<li><p>如果您以前未这样做，请通过使用 SQL Database 的连接信息替换占位符，更新紧挨方法 <strong>Main</strong> 之上的成员变量值。</p></li>
<li><p>通过按 <strong>F5</strong> 运行应用程序。您应在控制台窗口中看到以下输出。</p>

<p><img src="Images/expectedoutputodbcconnectiondemo.png?raw=true" alt="ODBC 连接演示的预期输出" />
</p>

<p><em>ODBC 连接演示的预期输出</em></p></li>
</ol>

<p><a name="Ex4Task4"></a></p>

<h4 id="Task_4_-_Connecting_to_SQL_Database_Using_OLEDB">任务 4 - 使用 OLEDB 连接到 SQL Database</h4>

<p>在此任务中，您将创建从 <strong>SQLDatabaseConnectionDemo</strong> 类继承的类并实现相应方法以使用 OLEDB 连接到 SQL Database。</p>

<ol>
<li><p>将新类添加到名为 <strong>OleDbConnectionDemo</strong> 的项目。为此，请在<strong>解决方案</strong><strong>资源管理器</strong>中右键单击 <strong>ConnectDemoApp</strong> 项目，然后选择<strong>“添加”</strong>|<strong>“类”</strong>。在<strong>“添加新项”</strong><strong></strong><strong></strong>对话框中，确保您选择了<strong>“类”</strong>模板并将名称设置为 <strong>OleDbConnectionDemo.cs</strong>。</p></li>
<li><p>确保您在文件顶部包含以下命名空间指令：</p>

<!-- mark: 1-2 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">using</span> System.Data.Common;</strong>
<strong class="markLine"><span style="color:#0000FF">using</span> System.Data.OleDb;</strong>
</code></pre></li>
<li><p>将类定义更新为从 <strong>SQLDatabaseConnectionDemo</strong> 继承。该文件应该如下所示：</p>

<!-- mark: 1 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">public</span> <span style="color:#0000FF">class</span> OleDbConnectionDemo : SQLDatabaseConnectionDemo</strong>
{ }
</code></pre></li>
<li><p>重写 <strong>CreateConnection</strong> 方法以在 <strong>OleDbConnectionDemo</strong> 类中创建 <strong>OleDbConnection</strong>：</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 OLEDB CreateConnection - C#</em>）</p>

<!-- mark: 1-4 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">protected</span> <span style="color:#0000FF">override</span> DbConnection CreateConnection(<span style="color:#0000FF">string</span> userName, <span style="color:#0000FF">string</span> password, <span style="color:#0000FF">string</span> dataSource, <span style="color:#0000FF">string</span> databaseName)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> <span style="color:#0000FF">new</span> OleDbConnection(<span style="color:#0000FF">this</span>.CreateOleDBConnectionString(userName, password, dataSource, databaseName));</strong>
<strong class="markLine">}</strong>
</code></pre></li>
<li><p>实现由 <strong>CreateConnection</strong> 方法使用的 <strong>CreateOleDbConnectionString</strong> 方法。此方法负责生成用于使用 OLEDB 创建到 SQL Database 的连接的连接字符串。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 OLEDB CreateOleDbConnectionString method - C#</em>）</p>

<!-- mark: 1-15 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">private</span> <span style="color:#0000FF">string</span> CreateOleDBConnectionString(<span style="color:#0000FF">string</span> userName, <span style="color:#0000FF">string</span> password, <span style="color:#0000FF">string</span> dataSource, <span style="color:#0000FF">string</span> databaseName)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">string</span> serverName = GetServerName(dataSource);</strong>
<strong class="markLine"></strong>
<strong class="markLine">  OleDbConnectionStringBuilder connectionStringBuilder = <span style="color:#0000FF">new</span> OleDbConnectionStringBuilder</strong>
<strong class="markLine">  {</strong>
<strong class="markLine">    Provider = <span style="color:#8B0000">&quot;SQLOLEDB&quot;</span>,</strong>
<strong class="markLine">    DataSource = dataSource,</strong>
<strong class="markLine">  };</strong>
<strong class="markLine">  connectionStringBuilder[<span style="color:#8B0000">&quot;Initial Catalog&quot;</span>] = databaseName;</strong>
<strong class="markLine">  connectionStringBuilder[<span style="color:#8B0000">&quot;UId&quot;</span>] = userName + <span style="color:#8B0000">&quot;@&quot;</span> + serverName;</strong>
<strong class="markLine">  connectionStringBuilder[<span style="color:#8B0000">&quot;Pwd&quot;</span>] = password;</strong>
<strong class="markLine"></strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> connectionStringBuilder.ConnectionString;</strong>
<strong class="markLine">}</strong>
</code></pre></li>
<li><p>重写 <strong>CreateCommand</strong> 方法以创建 <strong>OleDbCommand</strong>。请记住在父类中调用此抽象方法以获取连接并执行不同的 SQL 语句示例。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 OLEDB CreateCommand method - C#</em>）</p>

<!-- mark: 1-4 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#0000FF">protected</span> <span style="color:#0000FF">override</span> DbCommand CreateCommand(DbConnection connection)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">return</span> <span style="color:#0000FF">new</span> OleDbCommand() { Connection = connection <span style="color:#0000FF">as</span> OleDbConnection };</strong>
<strong class="markLine">}</strong>
</code></pre>

<p>这是使用 OLEDB 连接所需的特定代码。现在您将在 <strong>Program.cs</strong> 文件中包含一些代码以测试连接并查看不同操作的工作方式。</p></li>
<li><p>通过在<strong>解决方案</strong><strong>资源管理器</strong>中双击 <strong>ConnectDemoApp</strong> 项目内的 <strong>Program.cs</strong> 文件打开该文件。</p></li>
<li><p>在方法 <strong>Main</strong> 中，实现相应逻辑以创建 <strong>OleDbConnectionDemo</strong> 类的实例并针对 SQL Database 执行该演示。您可以根据是要立即测试所有技术还是仅测试此技术，添加或替换上述任务中的代码。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 OLEDB demo implementation - C#</em>）</p>

<!-- mark: 5-10 -->

<span class="codelanguage">C#</span><pre><code class="C#"><span style="color:#0000FF">static</span> <span style="color:#0000FF">void</span> Main(<span style="color:#0000FF">string</span>[] args) {
  <span style="color:#008000">//...</span>

<strong class="markLine">  <span style="color:#008000">// Invoke the OleDB connection demo</span></strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Starting the OLEDB Connection Demo.&quot;</span>);</strong>
<strong class="markLine">  OleDbConnectionDemo demo3 = <span style="color:#0000FF">new</span> OleDbConnectionDemo();</strong>
<strong class="markLine">  demo3.ConnectToSQLDatabase(userName, password, datasource, databaseName);</strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Demo Complete... Press any key&quot;</span>);</strong>
<strong class="markLine">  Console.ReadKey();</strong>
}
</code></pre></li>
<li><p>如果您以前未这样做，请通过使用 SQL Database 的连接信息替换占位符，更新紧挨方法 <strong>Main</strong> 之上的成员变量值。</p></li>
<li><p>通过按 <strong>F5</strong> 运行应用程序。您应在控制台窗口中看到以下输出。</p>

<p><img src="Images/expectedoutputoledbconnectiondemo.png?raw=true" alt="OLEDB 连接演示的预期输出" />
</p>

<p><em>OLEDB 连接演示的预期输出</em></p></li>
</ol>

<p><a name="Ex4Task5"></a></p>

<h4 id="Task_5_-_Connecting_to_SQL_Database_Using_Entity_Framework">任务 5 - 使用实体框架连接到 SQL Database</h4>

<p>您以三种不同方式连接到了 SQL Database 上的数据库。我们最后要尝试的技术是<strong>实体框架</strong>。您将注意到此演示的类实现不从 <strong>SQLDatabaseConnectionDemo</strong> 类继承，因为当使用<strong>实体框架</strong>时，不必管理连接和命令；它们由基础技术管理，您不用担心它们。</p>

<ol>
<li><p>打开 <strong>App.config</strong> 文件，将连接字符串更改为指向 SQL Database，使用在此实验前面创建的测试用户，输入密码进行连接。</p>
<blockquote>
<p><strong>注意：</strong>此步骤是必需的，因为<strong>实体框架</strong>从配置文件获取连接设置。</p>
</blockquote></li>
<li><p>将新的 ADO.NET 实体数据模型添加到名为 <strong>HoLModel</strong> 的项目。为此，请在<strong>解决方案资源管理器</strong>中右键单击 <strong>ConnectDemoApp</strong> 项目。选择<strong>“添加”|“新建项”</strong>。在<strong>“添加新项”</strong>对话框中，确保您选择了<strong>“ADO.NET 实体数据模型”</strong>模板并将名称设置为 <strong>HoLModel.edmx</strong>。</p>

<p><img src="Images/addingefmodel.png?raw=true" alt="添加实体框架模型" />
</p>

<p><em>添加实体框架模型</em></p></li>
<li><p>在<strong>实体数据模型向导</strong>中，选择<strong>“从数据库生成”</strong>，然后单击<strong>“下一步”</strong>。</p>

<p><img src="Images/choosingmodelcontents.png?raw=true" alt="选择模型内容" />
</p>

<p><em>选择模型内容</em></p></li>
<li><p>在<strong>“选择数据连接”</strong>步骤中，选择<strong>“是，在连接字符串中包括敏感数据”</strong>并将 <strong>AdventureWorksLTConnectionString</strong> 作为数据连接，将 <strong>HolTestDBEntities</strong> 作为实体连接设置名称。单击<strong>“下一步”</strong>。</p>

<p><img src="Images/choosingmodelcontents2.png?raw=true" alt="选择模型内容 2" />
</p>

<p><em>选择模型内容</em></p></li>
<li><p>在<strong>“连接到 SQL Server”</strong>步骤，提供前面创建的 HolUser 的 SQL 凭据，然后单击<strong>“确定”</strong>。</p>

<p><img src="Images/connect-sql-server.png?raw=true" alt="连接到 SQL Server" />
</p>

<p><em>连接到 SQL Server</em></p></li>
<li><p>在<strong>“选择数据库对象”</strong>步骤中，选择所有数据库对象，选择<strong>“确定所生成对象名称的单复数形式”</strong>，然后单击<strong>“完成”</strong>。</p>

<p><img src="Images/choosingdatabaseobjects.png?raw=true" alt="选择数据库对象" />
</p>

<p><em>选择数据库对象</em></p></li>
<li><p>创建后，将显示该模型。</p>

<p><img src="Images/efmodelcreated.png?raw=true" alt="创建的实体框架模型" />
</p>

<p><em>创建的实体框架模型</em></p></li>
<li><p>将新类添加到名为 <strong>EFConnectionDemo</strong> 的项目。为此，请在<strong>解决方案</strong><strong>资源管理器</strong>中右键单击 <strong>ConnectDemoApp</strong> 项目，然后选择<strong>“添加”</strong>|<strong>“类”</strong>。在<strong>“添加新项”</strong><strong></strong><strong></strong>对话框中，确保您选择了<strong>“类”</strong>模板并将名称设置为 <strong>EFConnectionDemo.cs</strong>。</p></li>
<li><p>将以下方法添加到 <strong>EFConnectionDemo</strong> 类。这将从数据库检索所有公司名称并将它们打印到控制台。为此，它利用实体框架 <strong>HolTestDBEntities</strong> 类。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 EF ConnectToSQLDatabase method - C#</em>）</p>

<!-- mark: 1-18 -->

<span class="codelanguage">C#</span><pre><code class="C#"><strong class="markLine"><span style="color:#808080">/// &lt;summary&gt;</span></strong>
<strong class="markLine"><span style="color:#808080">/// HolTestDbEntities takes care of handling your transactions for you</span></strong>
<strong class="markLine"><span style="color:#808080">/// leaving you free use Linq to extract information stores up in the cloud</span></strong>
<strong class="markLine"><span style="color:#808080">/// &lt;/summary&gt;</span></strong>
<strong class="markLine"><span style="color:#0000FF">public</span> <span style="color:#0000FF">void</span> ConnectToSQLDatabase()</strong>
<strong class="markLine">{</strong>
<strong class="markLine">  <span style="color:#0000FF">using</span> (HolTestDBEntities context = <span style="color:#0000FF">new</span> HolTestDBEntities())</strong>
<strong class="markLine">  { </strong>
<strong class="markLine">      IQueryable&lt;<span style="color:#0000FF">string</span>&gt; companyNames = from customer <span style="color:#0000FF">in</span> context.Customers</strong>
<strong class="markLine">        where customer.CustomerID &lt; 20</strong>
<strong class="markLine">        select customer.CompanyName;</strong>
<strong class="markLine"></strong>
<strong class="markLine">      <span style="color:#0000FF">foreach</span> (<span style="color:#0000FF">var</span> company <span style="color:#0000FF">in</span> companyNames)</strong>
<strong class="markLine">      {</strong>
<strong class="markLine">        Console.WriteLine(company);</strong>
<strong class="markLine">      }</strong>
<strong class="markLine">   }</strong>
<strong class="markLine">}</strong>
</code></pre></li>
<li><p>添加以下代码以在 <strong>Program.cs</strong> 文件的方法 <strong>Main</strong> 中调用 LINQ to SQL 演示。您可以根据是要立即测试所有技术还是仅测试此技术，添加或替换上述任务中的代码。</p>

<p>（代码段 - <em>WindowsAzureSQLDatabase - Ex4 EF demo implementation - C#</em>）</p>

<!-- mark: 5-10 -->

<span class="codelanguage">C#</span><pre><code class="C#"><span style="color:#0000FF">static</span> <span style="color:#0000FF">void</span> Main(<span style="color:#0000FF">string</span>[] args) {
  <span style="color:#008000">//...</span>

<strong class="markLine">  <span style="color:#008000">// Invoke the Entity Framework connection demo</span></strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Starting the Entity Framework Connection Demo...&quot;</span>);</strong>
<strong class="markLine">  EFConnectionDemo demo4 = <span style="color:#0000FF">new</span> EFConnectionDemo();</strong>
<strong class="markLine">  demo4.ConnectToSQLDatabase();</strong>
<strong class="markLine">  Console.WriteLine(<span style="color:#8B0000">&quot;Demo Complete... Press any key&quot;</span>);</strong>
<strong class="markLine">  Console.ReadKey();</strong>
}
</code></pre></li>
<li><p>按 <strong>F5</strong> 运行您的应用程序。您应看到公司名称的长列表。使用 LINQ to SQL 从 SQL Database 服务器上的数据库检索这些数据。</p>

<p><img src="Images/expectedoutputefconnectiondemo.png?raw=true" alt="实体框架连接演示的预期输出" />
</p>

<p><em>实体框架连接演示的预期输出</em></p></li>
</ol>

<p><a name="Ex4Task6"></a></p>

<h4 id="Task_6_-_Connecting_to_SQL_Database_via_Non-Microsoft_Technologies">任务 6 - 通过非 Microsoft 技术连接到 SQL Database</h4>

<p>使用非 Windows 技术连接到 SQL Database 是很普通的事。</p>

<p>以下 PHP 版本采用您应从以前的任务熟悉的模式。它使用 SQL Server Native Client ODBC 驱动程序建立连接。</p> <!-- mark: 1-18 --> <span class="codelanguage">PHP</span><pre><code class="PHP"><strong class="markLine"><span style="color:#0000FF">&lt;?</span>php</strong>
<strong class="markLine">  $host = <span style="color:#8B0000">&quot;server.database.windows.net&quot;</span>;</strong>
<strong class="markLine">  $dbname = <span style="color:#8B0000">&quot;database&quot;</span>;</strong>
<strong class="markLine">  $dbuser = <span style="color:#8B0000">&quot;user@server&quot;</span>;</strong>
<strong class="markLine">  $dbpwd = <span style="color:#8B0000">&quot;password&quot;</span>;</strong>
<strong class="markLine">  $driver = <span style="color:#8B0000">&quot;{SQL Server Native Client 11.0}&quot;</span>;</strong>
<strong class="markLine"></strong>
<strong class="markLine">  <span style="color:#008000">// Build connection string</span></strong>
<strong class="markLine">  $dsn = <span style="color:#8B0000">&quot;Driver=$driver;Server=$host;Database=$dbname;Encrypt=true;TrustServerCertificate=true&quot;</span>;</strong>
<strong class="markLine">  <a href="http://www.php.net/if" style="color:#0000FF">if</a> (!($conn = @<a href="http://www.php.net/odbc_connect" style="color:#FFA500">odbc_connect</a>($dsn, $dbuser, $dbpwd))) {</strong>
<strong class="markLine">      <a href="http://www.php.net/die" style="color:#0000FF">die</a>(<span style="color:#8B0000">&quot;Connection error: &quot;</span> . odbc_errormsg());</strong>
<strong class="markLine">  }</strong>
<strong class="markLine"></strong>
<strong class="markLine">  <span style="color:#008000">// Got a connection, do what you will</span></strong>
<strong class="markLine"></strong>
<strong class="markLine">  <span style="color:#008000">// Free the connection</span></strong>
<strong class="markLine">      @<a href="http://www.php.net/odbc_close" style="color:#FFA500">odbc_close</a>($conn);</strong>
<strong class="markLine"><span style="color:#0000FF">?&gt;</span></strong>
</code></pre>

<p>使用 JDBC 连接到 SQL Database 也是很普通的事。请参考以下代码。</p> <!-- mark: 1-20 --> <span class="codelanguage">JAVA</span><pre><code class="JAVA"><strong class="markLine"><span style="color:#008000">// Build a connection string</span></strong>
<strong class="markLine">String connectionUrl= <span style="color:#8B0000">&quot;jdbc:sqlserver://server.database.windows.net;&quot;</span> +</strong>
<strong class="markLine">           <span style="color:#8B0000">&quot;database=mydatabase;encrypt=true;user=user@server;password=*****&quot;</span>;</strong>
<strong class="markLine"></strong>
<strong class="markLine"><span style="color:#008000">// Next, make sure the SQL Server Driver is loaded.</span></strong>
<strong class="markLine">Class.forName(<span style="color:#8B0000">&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;</span>);</strong>
<strong class="markLine"></strong>
<strong class="markLine"><span style="color:#008000">// Then try to get a connection. This will null or it will throw an exception if connection cannot be established.</span></strong>
<strong class="markLine"></strong>
<strong class="markLine">Connection sqlConn = DriverManager.getConnection(connectionUrl);</strong>
<strong class="markLine"><span style="color:#0000FF">if</span> (sqlConn == <span style="color:#0000FF">null</span>)</strong>
<strong class="markLine">{</strong>
<strong class="markLine">    System.out.println(<span style="color:#8B0000">&quot;Unable to obtain connection. Exiting...&quot;</span>);</strong>
<strong class="markLine">    System.exit(1);</strong>
<strong class="markLine">}</strong>
<strong class="markLine"></strong>
<strong class="markLine"><span style="color:#008000">// Got a connection, do what you will</span></strong>
<strong class="markLine"></strong>
<strong class="markLine"><span style="color:#008000">// Free the connection </span></strong>
<strong class="markLine">sqlConn.close();</strong>
</code></pre>

<hr />

<p><a name="Summary"></a></p>

<h2 id="Summary">小结</h2>

<p>在此实验中，您了解了使用 Windows Azure SQL Database 的基础知识。如果您已有一些 SQL Server 经验，会发现这个实验很熟悉，确实如此。使用 SQL Database 对使用过 SQL Server 的任何人来说都应该很熟悉。</p>

<p>您学习了如何创建新数据库以及如何创建这些数据库的登录名和用户。您已了解，对于大部分内容，您在 SQL Database 中创建对象就像在本地 SQL Server 中创建一样。</p>

<p>此外，您创建了一个可以使用 SQL Database 的简单 Windows Azure 应用程序。</p>

<p>最后，您已了解使用 Microsoft 技术建立与 SQL Database 之间的连接，以及创建与任何普通本地数据库之间的连接，所使用的方法是相同的。</p> </span>
		</div>
	<br/>
	<p><a href="#top">返回页首</a></p>


				</div>
			</section>
			<footer>
				<div class="footer-sitemap" style="border-top:0"></div>
				<div class="footer-bottom">
					<ul>
						<li class="footer-copyright"><a href="http://www.microsoft.com"><img alt="microsoft" src="images/microsoft.png" /></a></li>					
												<li><a href="https://github.com/WindowsAzure-TrainingKit/HOL-IntroSQLDatabase-VS2012/issues" target="_new">记录问题</a></li>
												<li><a href="mailto:azcfeed@microsoft.com?subject=Windows Azure Training Kit">联系我们</a></li>
						<li><a href="EULA.htm">使用条款</a></li>
						<li><a href=".\">浏览内容</a></li>
						<li>&copy; 2012 Microsoft</li>
					</ul>
				</div>
			</footer>
			</div>
        </div>
    </div>
</body>
</html>

