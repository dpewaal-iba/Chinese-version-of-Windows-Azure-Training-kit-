<!DOCTYPE html>

<html class="no-js" lang="en" class="js flexbox canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths">
<head id="ContentPlaceHolderDefault_Head1">
    <meta http-equiv="X-UA-Compatible" content="IE=9,chrome=1" />
    <meta charset=UTF-8" />
    <title>Windows Azure 培训包 - 使用 Windows Azure 网站构建和发布 Node.js 应用程序 (Windows)</title>
    <link rel="Stylesheet" type="text/css" media="all" href="styles/master.css" />
</head>
<body id="top" class="page-">
    <div id="page">
        <div id="wrapper" class="landingPage getStartedPage">            
            <div class="header">								
				<img alt="Windows Azure" src="images/azure-logo.png" /> <span class="mainHomepageSubTitle">培训包 - 2012 年 12 月更新</span>								
			</div>			
			<div class="nav-menu-header">
				<nav>
					<ul>
						<li class="MenuLink-Selected">
							<a href="#">内容</a>
						</li>
												<li class="MenuLink">
							<a href="Source">设置</a>
						</li>
											</ul>
				
										
						<span id="github-btn" class="github-btn"> <a id="gh-btn" title="在 GitHub 中复制此存储库的分支" href="https://github.com/WindowsAzure-TrainingKit/HOL-NodejsAzureWebSites" target="_blank" class="gh-btn"> <span class="gh-ico"></span> <span id="gh-text" class="gh-text">分支</span> </a> </span> <span id="github-btn" class="github-btn github-watchers"> <a id="gh-btn" title="在 GitHub 中关注此存储库" href="https://github.com/WindowsAzure-TrainingKit/HOL-NodejsAzureWebSites" target="_blank" class="gh-btn"> <span class="gh-ico"></span> <span id="gh-text" class="gh-text">关注</span> </a> </span>
						
									
				</nav>
			</div>	        
		</span>
			<div id="content" class="textpage">
            <section id="content-container">
				<div id="content" class="textpage">
			    <a name="top"></a>
				
				

		<div class="content">
			<?xml version="1.0" encoding="iso-8859-1"?><span><p><a name="Title"></a></p>

<h1 id="Building_and_Publishing_Nodejs_Applications_with_Windows_Azure_Web_Sites_Windows">使用 Windows Azure 网站构建和发布 Node.js 应用程序 (Windows)</h1>

<hr />

<p><a name="Overview"></a></p>

<h2 id="Overview">概述</h2>

<p>在此动手实验中，您将学习针对 Node.js 应用程序的 Windows Azure 网站服务的基础知识。在练习 1 中，您将看到如何使用 Windows Azure 管理门户创建一个网站，然后使用 GIT 发布一个“Hello World”Node.js 应用程序。在练习 2 中，您将学习如何使用 Windows Azure 命令行工具发布应用程序。最后，在练习 3 中，您将了解用于在 Windows Azure 中构建和发布 Node.js Web 应用程序的 WebMatrix 2 功能。</p>

<p><a name="Objectives"></a></p>

<h3 id="Objectives">目标</h3>

<p>在此动手实验中，您将学习如何使用以下各项创建和发布 Node.js 应用程序：</p>

<ul>
<li>Git</li>
<li>Windows Azure 命令行工具</li>
<li>WebMatrix 2</li>
</ul>

<p><a name="Prerequisites"></a></p>

<h3 id="Prerequisites">先决条件</h3>

<p>下面是完成此动手实验需要满足的先决条件：</p>

<ul>
<li><a href="http://git-scm.com/">Git 版本控制系统</a></li>
<li><a href="http://go.microsoft.com/?linkid=9809776">Microsoft WebMatrix 2</a>（仅用于练习 3）</li>
<li><a href="http://nodejs.org/#download">Node.js</a></li>
<li><p><a href="https://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/command-line-tools/">Windows Azure 命令行工具</a>（仅用于练习 2）</p>
<blockquote>
<p><strong>注意：</strong>如果您没有安装 Windows Azure 命令行工具，请使用管理员权限打开一个命令提示符，然后运行以下命令：</p>

<span class="codelanguage">PowerShell</span><pre><code class="PowerShell">npm install azure-cli -g
</code></pre>

<p>通过使用 -g，Windows Azure 命令行工具将全局安装在您的计算机上。这意味着，您将可以从任何位置执行 Azure 命令。</p>
</blockquote></li>
<li><p>启用了网站预览的 Windows Azure 订阅 - <a href="http://aka.ms/WATK-FreeTrial">注册以免费试用</a></p></li>
</ul>
<blockquote>
<p><strong>注意：</strong>本实验设计为使用 Windows 7 操作系统。</p>
</blockquote>
<p><a name="Setup"></a></p>

<h3 id="Setup">设置</h3>

<p>为了执行此动手实验中的各项练习，需要对环境进行设置。</p>

<ol>
<li><p>打开 Windows 资源管理器窗口，浏览到此实验的 <strong>Source</strong> 文件夹。</p></li>
<li><p>右键单击 <strong>Setup.cmd</strong> 文件，然后单击<strong>“以管理员身份运行”</strong>。这将启动自动检查和安装所有要求的安装过程。</p></li>
</ol>

<hr />

<p><a name="Exercises"></a></p>

<h2 id="Exercises">练习</h2>

<p>此动手实验包括以下练习：</p>

<ol>
<li><a href="#Exercise1">使用 GIT 构建和发布 Node.js 网站</a></li>
<li><a href="#Exercise2">使用命令行工具构建和发布 Node.js 网站</a></li>
<li><a href="#Exercise3">使用 WebMatrix 2 构建和发布 Node.js 网站</a></li>
</ol>

<p><a name="Exercise1"></a></p>

<h3 id="Exercise_1_Building_and_Publishing_a_Nodejs_Web_Site_using_GIT">练习 1：使用 GIT 构建和发布 Node.js 网站</h3>

<p>在第一个练习中，您将在 Windows Azure 门户中创建一个新网站，创建一个“Hello World”Node.js 应用程序，最后利用 Windows Azure 提供的新的 GIT 发布功能部署此应用程序。</p>

<p><a name="Ex1Task1"></a></p>

<h4 id="Task_1_-_Creating_a_New_Web_Site_Hosted_in_Windows_Azure">任务 1 - 创建在 Windows Azure 中托管的新网站</h4>

<ol>
<li><p>转到 <a href="https://manage.windowsazure.com/">Windows Azure 门户</a>，使用与您的订阅关联的 <strong>Microsoft 帐户</strong>凭据登录。</p>

<p><img src="images/log-in-into-windows-azure-portal.png?raw=true" alt="登录到 Windows Azure 管理门户" title="登录到 Windows Azure 管理门户" />
</p>

<p><em>登录到 Windows Azure 管理门户</em></p></li>
<li><p>单击页面底部的<strong>“新建”</strong>。</p>

<p><img src="images/creating-a-new-web-site.png?raw=true" alt="创建新网站" title="创建新网站" />
</p>

<p><em>创建新网站</em></p></li>
<li><p>单击<strong>“网站”</strong>，然后单击<strong>“快速创建”</strong>。为这个新网站提供一个可用 URL，然后单击<strong>“创建网站”</strong>。</p>
<blockquote>
<p><strong>注意：</strong>Windows Azure 网站是一个宿主平台，您可以在该平台上控制和管理云中运行的 Web 应用程序。通过“快速创建”选项，可以从门户外将已完成的 Web 应用程序部署到 Windows Azure 网站。它不包含用于设置数据库的步骤。</p>
</blockquote>
<p><img src="images/creating-a-new-web-site-using-quick-create-op.png?raw=true" alt="使用“快速创建”创建新网站" title="使用“快速创建”创建新网站" />
</p>

<p><em>使用“快速创建”创建新网站</em></p></li>
<li><p>等待新网站创建完成。</p>

<p><img src="images/creating-new-web-site-status.png?raw=true" alt="创建新网站状态" title="创建新网站状态" />
</p>

<p><em>创建新网站状态</em></p></li>
<li><p>创建网站之后，单击 <strong>URL</strong> 列下面的链接。检查这个新网站是否工作正常。</p>

<p><img src="images/browsing-to-new-site.png?raw=true" alt="浏览到新网站" title="浏览到新网站" />
</p>

<p><em>浏览到新网站</em></p>

<p><img src="images/web-site-running.png?raw=true" alt="网站正在运行" title="网站正在运行" />
</p>

<p><em>运行中的网站</em></p></li>
<li><p>返回到门户，然后单击<strong>“名称”</strong>列下的网站名称以显示该网站的管理页。</p>

<p><img src="images/selecting-the-dashboard-tab.png?raw=true" alt="打开网站管理页" title="打开网站管理页" />
</p>

<p><em>打开网站管理页</em></p></li>
<li><p>在<strong>“仪表板”</strong>页中的<strong>“速览”</strong>部分下，单击<strong>“设置 Git 发布”</strong>链接。</p>

<p><img src="images/setting-up-git-publishing.png?raw=true" alt="设置 Git 发布" title="设置 Git 发布" />
</p>

<p><em>设置 Git 发布</em></p>
<blockquote>
<p><strong>注意：</strong>Git 是一个免费的、开源的分布式版本控制系统，可处理从小型项目到超大型项目的各类项目。在设置 Git 发布之后，每次的 Git 推送都会启动一个新的部署。</p>
</blockquote></li>
<li><p>等待几秒钟，直到 Git 存储库就绪。</p>
<blockquote>
<p><strong>提示：</strong>在 Git 存储库就绪后，您将看到一个快速启动页，其中包含您为了将 Web 应用程序文件推送到 Windows Azure 而需要执行的一组命令。</p>
</blockquote>
<p><img src="images/git-repository-created.png?raw=true" alt="Git 存储库已创建" title="Git 存储库已创建" />
</p>

<p><em>Git 存储库已创建</em></p></li>
<li><p>不要关闭管理门户。</p></li>
</ol>

<p><a name="Ex1Task2"></a></p>

<h4 id="Task_2_-_Creating_a_New_Nodejs_Web_Application">任务 2 - 创建新的 Node.js Web 应用程序</h4>

<ol>
<li><p>在 <em>C:\</em> 驱动器或者可以轻松访问的其他位置中创建一个新的 <strong>node</strong> 文件夹。</p></li>
<li><p>使用文本编辑器创建一个新的文本文件并添加以下代码，该代码将字符串 <em>Hello World</em> 发送到浏览器。将该文件以 <strong>server.js</strong> 的名称另存到您创建的文件夹中（在这个例子中是 <em>C:\node</em>）。</p>

<span class="codelanguage">Javascript</span><pre><code class="Javascript"><span style="color:#0000FF">var</span> http = require(&#39;http&#39;);
<span style="color:#0000FF">var</span> port = process.env.port || 1337; http.createServer(<span style="color:#0000FF">function</span> (req, res) { res.writeHead(200, { &#39;Content-Type&#39;: &#39;text/plain&#39; }); res.end(&#39;Hello World\n&#39;); }).listen(port);
</code></pre></li>
<li><p>使用文本编辑器创建一个新的文本文件并添加以下代码。将该文件以 <strong>package.json</strong> 的名称另存到 <strong>node</strong> 文件夹中。</p>

<span class="codelanguage">Json</span><pre><code class="Json">{ &quot;name&quot;: &quot;HelloWorld&quot;, &quot;version&quot;: &quot;0.0.1&quot;, &quot;description&quot;: &quot;&quot;, &quot;main&quot;: &quot;./server.js&quot;, &quot;engines&quot;: { &quot;node&quot;: &quot;&gt;= 0.6.0&quot; } }
</code></pre>
<blockquote>
<p><strong>注意：</strong>package.json 文件指示 Node.js 包管理器 (npm) 如何建立包结构以及哪些是模块依赖项。因为此应用程序非常简单，所以它不要求依赖项，但在更复杂的应用程序中，您将可能需要指定 &quot;dependencies&quot; 属性。在使用 Git 发布应用程序时，Windows Azure 平台将自动安装在此文件中声明的所有依赖项。</p>
</blockquote></li>
<li><p>使用文本编辑器创建另一个文本文件并添加以下代码。将该文件以 <strong>web.config</strong> 的名称另存到您的网站文件夹中（在这个例子中是 <em>C:\node</em>）。此配置指示 <strong>server.js</strong> 文件是要由 iisnode 模块处理的 Node.js 应用程序。</p>
<blockquote>
<p><strong>注意：</strong><a href="https://github.com/tjanczuk/iisnode">iisnode</a> 项目提供一个本机 IIS 7.x 模块，该模块将允许在 IIS 7.x 和 IIS 7.x Express (WebMatrix) 中承载 node.js 应用程序。</p>
</blockquote>
<span class="codelanguage">XML</span><pre><code class="XML"><span style="color:#0000FF">&lt;?</span>xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;<span style="color:#0000FF">?&gt;</span>
<span style="color:#0000FF">&lt;</span><span style="color:#800000">configuration</span><span style="color:#0000FF">&gt;</span>
    <span style="color:#0000FF">&lt;</span><span style="color:#800000">system.webServer</span><span style="color:#0000FF">&gt;</span>
          <span style="color:#0000FF">&lt;</span><span style="color:#800000">modules</span> <span style="color:#FF0000">runAllManagedModulesForAllRequests</span>=<span style="color:#0000FF">&quot;false&quot;</span> <span style="color:#0000FF">/&gt;</span>

          <span style="color:#008000">&lt;!-- indicates that the server.js file is a node.js application to be handled by the iisnode module --&gt;</span>
          <span style="color:#0000FF">&lt;</span><span style="color:#800000">handlers</span><span style="color:#0000FF">&gt;</span>
            <span style="color:#0000FF">&lt;</span><span style="color:#800000">add</span> <span style="color:#FF0000">name</span>=<span style="color:#0000FF">&quot;iisnode&quot;</span> <span style="color:#FF0000">path</span>=<span style="color:#0000FF">&quot;server.js&quot;</span> <span style="color:#FF0000">verb</span>=<span style="color:#0000FF">&quot;*&quot;</span> <span style="color:#FF0000">modules</span>=<span style="color:#0000FF">&quot;iisnode&quot;</span> <span style="color:#0000FF">/&gt;</span>
          <span style="color:#0000FF">&lt;/</span><span style="color:#800000">handlers</span><span style="color:#0000FF">&gt;</span>
          <span style="color:#0000FF">&lt;</span><span style="color:#800000">rewrite</span><span style="color:#0000FF">&gt;</span>
            <span style="color:#0000FF">&lt;</span><span style="color:#800000">rules</span><span style="color:#0000FF">&gt;</span>
              <span style="color:#0000FF">&lt;</span><span style="color:#800000">clear</span> <span style="color:#0000FF">/&gt;</span>
              <span style="color:#0000FF">&lt;</span><span style="color:#800000">rule</span> <span style="color:#FF0000">name</span>=<span style="color:#0000FF">&quot;app&quot;</span> <span style="color:#FF0000">enabled</span>=<span style="color:#0000FF">&quot;true&quot;</span> <span style="color:#FF0000">patternSyntax</span>=<span style="color:#0000FF">&quot;ECMAScript&quot;</span> <span style="color:#FF0000">stopProcessing</span>=<span style="color:#0000FF">&quot;true&quot;</span><span style="color:#0000FF">&gt;</span>
                <span style="color:#0000FF">&lt;</span><span style="color:#800000">match</span> <span style="color:#FF0000">url</span>=<span style="color:#0000FF">&quot;server\.js.+&quot;</span> <span style="color:#FF0000">negate</span>=<span style="color:#0000FF">&quot;true&quot;</span> <span style="color:#0000FF">/&gt;</span>
                <span style="color:#0000FF">&lt;</span><span style="color:#800000">conditions</span> <span style="color:#FF0000">logicalGrouping</span>=<span style="color:#0000FF">&quot;MatchAll&quot;</span> <span style="color:#FF0000">trackAllCaptures</span>=<span style="color:#0000FF">&quot;false&quot;</span> <span style="color:#0000FF">/&gt;</span>
                <span style="color:#0000FF">&lt;</span><span style="color:#800000">action</span> <span style="color:#FF0000">type</span>=<span style="color:#0000FF">&quot;Rewrite&quot;</span> <span style="color:#FF0000">url</span>=<span style="color:#0000FF">&quot;server.js&quot;</span> <span style="color:#0000FF">/&gt;</span>
              <span style="color:#0000FF">&lt;/</span><span style="color:#800000">rule</span><span style="color:#0000FF">&gt;</span>
            <span style="color:#0000FF">&lt;/</span><span style="color:#800000">rules</span><span style="color:#0000FF">&gt;</span>
          <span style="color:#0000FF">&lt;/</span><span style="color:#800000">rewrite</span><span style="color:#0000FF">&gt;</span>
    <span style="color:#0000FF">&lt;/</span><span style="color:#800000">system.webServer</span><span style="color:#0000FF">&gt;</span>
<span style="color:#0000FF">&lt;/</span><span style="color:#800000">configuration</span><span style="color:#0000FF">&gt;</span>
</code></pre></li>
</ol>

<p><a name="Ex1Task3"></a></p>

<h4 id="Task_3_-_Publishing_the_Nodejs_Application_using_Git">任务 3 - 使用 Git 发布 Node.js 应用程序</h4>

<ol>
<li><p>返回到 Windows Azure 管理门户。打开网站的<strong>“仪表板”</strong>，在<strong>“速览”</strong>部分下，复制 <strong>Git Clone Url</strong> 值。</p>

<p><img src="images/git-clone-url.png?raw=true" alt="Git Clone Url" />
</p>

<p><em>复制 Git Clone Url</em></p></li>
<li><p>为了发布您的本地文件，请打开 <strong>Git BASH</strong> 控制台，使用 CD 命令进入您的应用程序文件夹（在这个例子中为 <em>C:\node</em>），然后运行以下命令。</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">git init git add . git commit -m &quot;initial commit&quot;
</code></pre>
<blockquote>
<p><strong>注意：</strong>您可以在项目文档 <a href="http://git-scm.com/documentation">http://git-scm.com/documentation</a> 中了解与 Git 命令有关的详细信息。</p>
</blockquote></li>
<li><p>若要添加远程 Windows Azure 存储库并推送文件，请运行以下命令。使用从门户获取的值替换 <em>{Git Clone Url}</em> 占位符。</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">git remote add azure {Git Clone Url} git push azure master
</code></pre></li>
<li><p>出现提示时，请输入部署凭据。</p>
<blockquote>
<p><strong>注意：</strong>部署凭据不同于与您的 Windows Azure 订阅关联的 Microsoft 帐户，并适用于与您的订阅关联的所有 Windows Azure 网站。如果您不知道自己的部署凭据，使用管理门户可以轻松重置它们。打开网站的<strong>“仪表板”</strong>页，单击<strong>“重置部署凭据”</strong>链接。提供一个新密码，然后单击“确定”。</p>

<p><img src="images/setting-the-username-and-password.png?raw=true" alt="重置部署凭据" title="重置部署凭据" />
</p>

<p><em>重置部署凭据</em></p>
</blockquote></li>
<li><p>转到网站的<strong>“仪表板”</strong>页，单击<strong>“速览”</strong>部分下的<strong>“网站 URL”</strong>链接以便确保该网站正在运行。</p>

<p><img src="images/running-the-nodejs-application.png?raw=true" alt="运行 Node.js 应用程序" title="运行 Node.js 应用程序" />
</p>

<p><em>运行 Node.js 应用程序</em></p></li>
</ol>

<hr />

<p><a name="Exercise2"></a></p>

<h3 id="Exercise_2_Building_and_Publishing_a_Nodejs_Web_Site_using_the_Command-Line_Tools">练习 2：使用命令行工具构建和发布 Node.js 网站</h3>

<p>在此练习中，您将学习如何使用 Windows Azure 命令行工具管理网站。</p>
<blockquote>
<p><strong>注意：</strong>在此实验的先决条件部分，提供了有关安装命令行工具的说明。</p>
</blockquote>
<ol>
<li><p>使用管理员权限打开一个命令提示符，然后执行以下命令以便下载您的帐户的<em>“发布配置文件”</em>文件。将弹出一个新的浏览器窗口，并且您必须使用您的 <strong>Microsoft 帐户</strong>凭据进行登录。</p>

<p>登录后，将该发布配置文件存储于一个已知位置（例如“C:\”）</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">azure account download
</code></pre>

<p><img src="images/download-publishsettings.png?raw=true" alt="下载帐户发布配置文件" title="下载帐户发布配置文件" />
</p>

<p><em>下载帐户发布配置文件</em></p></li>
<li><p>返回到命令提示符，通过运行以下命令导入在上一个步骤中下载的文件，并且在 <em>{publish_profile_file}</em> 占位符中指定发布配置文件位置（在这个例子中为 <em>'C:\'</em>）。</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">azure account import {publish_profile_file}
</code></pre></li>
<li><p>执行<a href="#Ex1Task2">练习 1 中的任务 2</a> 以便创建一个 Node.js 网站，但在与练习 1 中的不同文件夹中放置文件（例如 <em>C:\NodeCLI</em>）。</p></li>
<li><p>打开 Windows 命令提示符并且使用 CD 命令进入放置了网站的文件夹（在这个例子中是 <em>C:\NodeCLI</em>）。</p></li>
<li><p>运行以下命令以创建 Windows Azure 承载的网站。</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">azure site create --git
</code></pre>

<p>在系统提示时提供一个网站名称，例如 <em>NodeCLI</em>。然后，选择一个区域并继续。</p>

<p><img src="images/new-web-site-cli.png?raw=true" alt="使用命令行工具创建新网站" title="使用命令行工具创建新网站" />
</p>

<p><em>使用命令行工具创建新网站</em></p>
<blockquote>
<p><strong>注意：</strong>在运行命令 <strong>site create</strong> 时通过指定 <strong>--git</strong>，您无需运行附加的命令来初始化 Git 存储库或添加远程 Git，因为这两个任务将由命令行工具自动完成。</p>
</blockquote></li>
<li><p>现在，您将当前文件添加到 Git 存储库并且推送它们。为此，返回到命令提示符并且执行以下命令。出现提示时，提供您的部署凭据。</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">git add . git commit -m &quot;initial commit&quot; git push azure master
</code></pre>

<p><img src="images/push-site.png?raw=true" alt="推送网站文件" title="推送网站文件" />
</p>

<p><em>推送网站文件</em></p>
<blockquote>
<p><strong>注意：</strong>部署凭据不同于与您的 Windows Azure 订阅关联的 Microsoft 帐户，并适用于与您的订阅关联的所有 Windows Azure 网站。如果您不知道自己的部署凭据，使用管理门户可以轻松重置它们。打开网站的<strong>“仪表板”</strong>页，单击<strong>“重置部署凭据”</strong>链接。提供一个新密码，然后单击“确定”。</p>

<p><img src="images/reset-credentials-cli.png?raw=true" alt="重置部署凭据" title="重置部署凭据" />
</p>

<p><em>重置部署凭据</em></p>
</blockquote></li>
<li><p>现在检查发布是否成功。运行以下命令以便在 Windows Azure 管理门户中打开该网站，并且提供与要登录的订阅相关联的 Microsoft 帐户凭据。</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">azure site portal
</code></pre>

<p>在 Windows Azure 门户中，在网站列表中单击您的网站，然后打开网站的<strong>“部署”</strong>页。签出最新的部署。</p>

<p><img src="images/site-deployments.png?raw=true" alt="网站部署" title="网站部署" />
</p>

<p><em>网站部署</em></p></li>
<li><p>现在执行以下命令以便浏览到该网站并且确保其成功运行。</p>

<span class="codelanguage">CommandPrompt</span><pre><code class="CommandPrompt">azure site browse
</code></pre>

<p><img src="images/website-working-cli.png?raw=true" alt="已发布网站" title="已发布网站" />
</p>

<p><em>已发布网站</em></p></li>
</ol>

<hr />

<p><a name="Exercise3"></a></p>

<h3 id="Exercise_3_Building_and_Publishing_a_Nodejs_Web_Site_using_WebMatrix_2">练习 3：使用 WebMatrix 2 构建和发布 Node.js 网站</h3>

<p>在此练习中，您将了解如何使用 WebMatrix 2 在 Windows Azure 中构建和发布网站。您将使用新的 Node.js 网站模板以便创建一个简单的 Node.js Web 应用程序，并且使用 WebMatrix 发布功能将其发布到 Windows Azure。</p>

<h4 id="Task_1_-_Creating_a_New_Nodejs_Web_Application_in_WebMatrix_2">任务 1 - 在 WebMatrix 2 中创建新的 Node.js Web 应用程序</h4>

<ol>
<li><p>执行<a href="#Ex1Task1">练习 1 中的任务 1</a> 以便在 Windows Azure 管理门户中创建新网站（例如 <em>web-matrix-test</em>）。</p></li>
<li><p>打开 <strong>WebMatrix 2</strong>。</p>

<p><img src="images/web-matrix.png?raw=true" alt="启动 WebMatrix 2" title="启动 WebMatrix 2" />
</p>

<p><em>启动 WebMatrix 2</em></p></li>
<li><p>选择<strong>“模板”</strong>选项，在<strong>“节点”</strong>类别下选择<strong>“Express 网站”</strong>模板。键入网站的名称，然后单击<strong>“下一步”</strong>。</p>
<blockquote>
<p><strong>注意：</strong>此模板提供一个基本的 Node.js Web 应用程序，它具有使用 Express（一个 MVC 样式的应用程序框架）的路线和模板。</p>
</blockquote>
<p><img src="images/express-template.png?raw=true" alt="使用 Express 网站模板创建网站" title="使用 Express 网站模板创建网站" />
</p>

<p><em>使用 Express 网站模板创建网站</em></p>
<blockquote>
<p><strong>注意：</strong>如果这是您首次使用 Express 网站模板，WebMatrix 将安装用于 IIS Express 的 IISNode。</p>

<p><img src="images/iisnode-install.png?raw=true" alt="用于 IIS Express 的 IISNode" title="用于 IIS Express 的 IISNode" />
</p>
</blockquote></li>
<li><p>从功能区栏中单击<strong>“运行”</strong>按钮以便查看该网站是否成功运行。</p>

<p><img src="images/express-template-running.png?raw=true" alt="运行网站" title="运行网站" />
</p>

<p><em>运行网站</em></p></li>
</ol>

<h4 id="Task_2_-_Publishing_the_Web_Application_to_Windows_Azure">任务 2 - 将 Web 应用程序发布到 Windows Azure</h4>

<ol>
<li><p>返回到 Windows Azure 门户，打开您创建的网站的<strong>“仪表板”</strong>。</p>

<p><img src="images/website-dashboard.png?raw=true" alt="打开仪表板" title="打开仪表板" />
</p>

<p><em>打开仪表板</em></p></li>
<li><p>从<strong>“速览”</strong>部分中单击<strong>“下载发布配置文件”</strong>链接并且将该文件保存到一个已知位置。</p>
<blockquote>
<p><strong>注意：</strong>对于启用的每种发布方法，<em>发布配置文件</em> 包含将 Web 应用程序发布到 Windows Azure 网站所需的全部信息。发布配置文件包含有启用了发布方法的每个端点的 URL，以及连接到这些端点和进行身份验证所需的用户凭据和数据库字符串。<strong>Microsoft WebMatrix</strong> 和 <strong>Microsoft Visual Web Developer</strong> 都支持读取发布配置文件以便自动配置这些程序，从而将 Web 应用程序发布到 Windows Azure 网站。</p>
</blockquote>
<p><img src="images/download-publish-profile.png?raw=true" alt="下载发布配置文件" title="下载发布配置文件" />
</p>

<p><em>下载发布配置文件</em></p></li>
<li><p>返回到 WebMatrix 中，从功能区栏中单击<strong>“发布”</strong>按钮。</p></li>
<li><p>在<strong>“发布设置”</strong>对话框中，单击<strong>“导入发布设置”</strong>链接。打开您刚下载的文件。</p>

<p><img src="images/import-publish-profile.png?raw=true" alt="打开发布设置" title="打开发布设置" />
</p>

<p><em>打开发布设置</em></p></li>
<li><p>单击<strong>“验证连接”</strong>并且确保验证成功运行。单击<strong>“保存”</strong>。</p>

<p><img src="images/validating-publish-settings.png?raw=true" alt="验证发布配置文件" title="验证发布配置文件" />
</p>

<p><em>验证发布配置文件</em></p></li>
<li><p>如果显示<strong>“发布兼容性”</strong>对话框，则单击<strong>“是”</strong>以便测试兼容性。在测试运行后，单击<strong>“继续”</strong>。</p>

<p><img src="images/publish-compatibility.png?raw=true" alt="测试发布兼容性" title="测试发布兼容性" />
</p>

<p><em>测试发布兼容性</em></p></li>
<li><p>在<strong>“发布预览”</strong>步骤上，确保选择了所有文件，然后单击<strong>“继续”</strong>。</p>

<p><img src="images/publish-preview.png?raw=true" alt="要发布的文件的预览" title="要发布的文件的预览" />
</p>

<p><em>要发布的文件的预览</em></p></li>
<li><p>确保发布成功完成。</p>

<p><img src="images/publish-successfully.png?raw=true" alt="发布网站" title="发布网站" />
</p>

<p><em>发布网站</em></p></li>
<li><p>单击通知消息中的网站链接以便浏览到已发布网站。</p>

<p><img src="images/published-site.png?raw=true" alt="浏览到已发布网站" title="浏览到已发布网站" />
</p>

<p><em>浏览到已发布网站</em></p></li>
</ol>

<hr />

<p><a name="Summary"></a></p>

<h2 id="Summary">小结</h2>

<p>在此动手实验中，您学习了针对 Node.js 应用程序的 Windows Azure 网站服务的基础知识。在练习 1 中，您看到了如何使用 Windows Azure 管理门户创建一个网站，然后使用 GIT 发布了一个“Hello World”Node.js 应用程序。在练习 2 中，您学习了如何使用 Windows Azure 命令行工具发布应用程序。最后，在练习 3 中，您了解了用于在 Windows Azure 中构建和发布 Node.js Web 应用程序的 WebMatrix 2 功能。最终，您具有了在 Windows Azure 上运行的有效 Node.js 网站。</p> </span>
		</div>
	<br/>
	<p><a href="#top">返回页首</a></p>


				</div>
			</section>
			<footer>
				<div class="footer-sitemap" style="border-top:0"></div>
				<div class="footer-bottom">
					<ul>
						<li class="footer-copyright"><a href="http://www.microsoft.com"><img alt="microsoft" src="images/microsoft.png" /></a></li>					
												<li><a href="https://github.com/WindowsAzure-TrainingKit/HOL-NodejsAzureWebSites/issues" target="_new">记录问题</a></li>
												<li><a href="mailto:azcfeed@microsoft.com?subject=Windows Azure Training Kit">联系我们</a></li>
						<li><a href="EULA.htm">使用条款</a></li>
						<li><a href=".\">浏览内容</a></li>
						<li>&copy; 2012 Microsoft</li>
					</ul>
				</div>
			</footer>
			</div>
        </div>
    </div>
</body>
</html>

